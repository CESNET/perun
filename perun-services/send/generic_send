#!/bin/bash

if [ -z "$SERVICE_NAME" ]; then
	echo 'Error: $SERVICE_NAME is not set' >&2
	exit 1;
fi

TIMEOUT="5400" #90s * 60 sec = 1.5h
TIMEOUT_KILL="60" # 60 sec to kill after timeout

FACILITY_NAME=$1
DESTINATION=$2
DESTINATION_TYPE=$3

TRANSPORT_COMMAND="ssh -o StrictHostKeyChecking=no -o GSSAPIAuthentication=no -o ConnectTimeout=5  -i `echo ~`/.ssh/id_rsa"
SLAVE_COMMAND="/opt/perun/bin/perun"
SERVICE_FILES_BASE_DIR="`pwd`/../gen/spool"
SERVICE_FILES_DIR="$SERVICE_FILES_BASE_DIR/$FACILITY_NAME/$SERVICE_NAME"

#dir which contains special configuration for this destination (this dir may not exist)  ==IT MUST BE ABSOLUTE PATH (because of double -C in tar command)==
SERVICE_FILES_FOR_DESTINATION="$SERVICE_FILES_DIR/_destination/$DESTINATION"

#Just safety check. This should not happen.
if [ ! -d "$SERVICE_FILES_DIR" ]; then echo '$SERVICE_FILES_DIR: '$SERVICE_FILES_DIR' is not a directory' >&2 ; exit 1; fi

#unless specific configuration for destination exists use common configuration for all destination
[ -d "$SERVICE_FILES_FOR_DESTINATION" ] || SERVICE_FILES_FOR_DESTINATION="$SERVICE_FILES_DIR/_destination/all"

#prepare additional parametres for tar if using configuration per destination
TAR_OPTIONS_CONF_PER_DESTINATION=""
[ -d "$SERVICE_FILES_FOR_DESTINATION" ] && TAR_OPTIONS_CONF_PER_DESTINATION=" -C '${SERVICE_FILES_FOR_DESTINATION}' . "

#if there is no destination type, use default 'host'
if [ -z "$DESTINATION_TYPE" ]; then
	DESTINATION_TYPE="host"
fi

case $DESTINATION_TYPE in
	host)
		HOSTNAME="$DESTINATION"
		HOST="root@$DESTINATION"
		SLAVE_COMMAND="/opt/perun/bin/perun"
		;;
	user@host)
		# Get the user name from the destination
		HOSTNAME=`echo $DESTINATION | sed -e 's/^.*@//'`
		HOST="$DESTINATION"
		SLAVE_COMMAND="~/perun/bin/perun"
		;;
	*)
		echo "Unknown destination type '$DESTINATION_TYPE'." >&2
		exit 1;
		;;
esac

TMP_HOSTNAME_DIR="`mktemp -d /tmp/perun-send.XXXXXXXXXX`"
if [ $? -ne 0 ]; then
	echo "Can't create temporary dir" >&2
	exit 255
fi

trap 'rm -r -f "$TMP_HOSTNAME_DIR"' EXIT

echo $HOSTNAME > "$TMP_HOSTNAME_DIR/HOSTNAME"
if [ $? -ne 0 ]; then
	echo "Can't write hostname to $TMP_HOSTNAME_DIR/HOSTNAME" >&2
	exit 255
fi

if [ -d "$SERVICE_FILES_FOR_DESTINATION" ]
then
	tar -c -C "$SERVICE_FILES_FOR_DESTINATION" . -C "$SERVICE_FILES_DIR"  --exclude="_destination" .  -C "$TMP_HOSTNAME_DIR" .  | timeout -k $TIMEOUT_KILL $TIMEOUT $TRANSPORT_COMMAND $HOST $SLAVE_COMMAND
else
	tar -c -C "$SERVICE_FILES_DIR"  --exclude="_destination" .  -C "$TMP_HOSTNAME_DIR" .  | timeout -k $TIMEOUT_KILL $TIMEOUT $TRANSPORT_COMMAND $HOST $SLAVE_COMMAND
fi
ERR_CODE=$?

echo "Slave script ends with return code: $ERR_CODE" >&2

exit $ERR_CODE
