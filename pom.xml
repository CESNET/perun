<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- PERUN -->
	<groupId>cz.metacentrum</groupId>
	<artifactId>perun</artifactId>
	<version>3.2.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<!-- Spring Boot Starter Parent as parent project - this project inherits versions of dependencies and plugins -->
	<!-- see https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-build-systems.html#using-boot-maven-parent-pom -->
	<!-- update Spring by changing the version here to the current release displayed at https://projects.spring.io/spring-boot/ -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.5.RELEASE</version>
		<relativePath/>
	</parent>

	<!-- PERUN MODULES -->
	<modules>
		<module>perun-base</module>
		<module>perun-auditparser</module>
		<module>perun-core</module>
		<module>perun-cabinet</module>
		<module>perun-tasks-lib</module>
		<module>perun-rpc-lib</module>
		<module>perun-registrar-lib</module>
		<module>perun-ldapc</module>
		<module>perun-rpc</module>
		<module>perun-notification</module>
		<module>perun-dispatcher</module>
		<module>perun-engine</module>
		<module>perun-voot</module>
		<module>perun-auditer-exporter</module>
		<module>perun-ldapc-initializer</module>
		<module>perun-web-gui</module>
	</modules>

	<!-- common environmental and version properties-->
	<properties>
		<!-- property used by spring-boot-starter-parent project to define maven.compiler.source and maven.compiler.target
		     properties that in turn are used by maven-compiler-plugin to specify java source and target version -->
		<java.version>8</java.version>

		<!-- USE UTF-8 in whole project -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- macros @perun.conf@ @perun.jdbc@ etc replaced in all filtered resources in /src/main/resources during maven build-->
		<perun.conf>/etc/perun/</perun.conf>
		<perun.jdbc>file:${perun.conf}jdbc.properties</perun.jdbc>
		<perun.ldapc>file:${perun.conf}perun-ldapc.properties</perun.ldapc>
		<perun.log>/var/log/perun/</perun.log>

		<!-- by default we run perun in memory -->
		<spring.profiles.default>default</spring.profiles.default>

		<!-- redefine versions of some libraries defined by Spring Boot Starter Parent -->
		<hsqldb.version>2.3.2</hsqldb.version> <!-- 2.3.3 fails GroupsManagerEntryIntegrationTest.addAdminWhenAlreadyAdmin test -->

		<!-- versions of libraries not defined by the Spring Boot Starter Parent -->
		<cglib-nodep.version>2.2.2</cglib-nodep.version>
		<commons-cli.version>1.4</commons-cli.version>
		<commons-collections.version>3.2.2</commons-collections.version>
		<dumbster.version>1.6</dumbster.version>
		<expiringmap.version>0.4.3</expiringmap.version>
		<google-api-services-admin-directory.version>directory_v1-rev103-1.24.1</google-api-services-admin-directory.version>
		<graphviz.version>0.5.4</graphviz.version>
		<hornetq.version>2.2.21.Final</hornetq.version>
		<jackson1.version>1.9.13</jackson1.version>
		<jboss-jms-api.version>1.1.0.GA</jboss-jms-api.version>
		<jcip.version>1.0</jcip.version>
		<jdom.version>1.0</jdom.version>
		<json.version>20140107</json.version>
		<netty3.version>3.2.1.Final</netty3.version>
		<opencsv.version>3.3</opencsv.version>
		<oracle.version>12.2.0.1.0</oracle.version>
		<recaptcha4j.version>0.0.7</recaptcha4j.version>
		<smackx.version>3.1.0</smackx.version>
		<taglibs-standard.version>1.2.5</taglibs-standard.version>
	</properties>

	<!-- DEFAULT MAVEN BUILD SETTINGS

	 - child modules inherits settings (e.g. version, encoding), not plugin usage itself
	 - to explicitly use one of listed plugins in module just specify groupId and artifactId in it's plugins section for each plugin
	 - child module can override any setting of plugin by defining value in child module (or it's profile)
	 - beware, that default action on plugins configurations, executions etc. is MERGE !!
	 - if merged values are defined in both (parent and child module), than module value if used

	-->
	<build>

		<!-- by default we build + install artifact in local repository -->
		<defaultGoal>install</defaultGoal>

		<!-- Common plugin settings is inherited by child modules -->
		<pluginManagement>

			<plugins>

				<!-- mvn clean - cleans output folder (target) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
				</plugin>

				<!-- mvn compile - compile as Java 8 app in UTF-8 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<verbose>false</verbose>
						<!--<compilerArgument>-Xlint:unchecked,deprecation</compilerArgument>-->
					</configuration>
				</plugin>

				<!-- mvn install - build artifact and install it in local repository (.m2 folder) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
				</plugin>

				<!-- mvn javadoc - creates javadoc from source (we do append spring javadoc if found) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<configuration>
						<detectLinks/>
						<!-- disable hard errors when generating javadoc -->
						<doclint>none</doclint>
						<links>
							<link>http://docs.spring.io/spring/docs/current/javadoc-api/</link>
						</links>
					</configuration>
				</plugin>

				<!-- mvn source:jar - packages sources -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
				</plugin>

				<!-- mvn jar:jar - creates final jar -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
				</plugin>

				<!-- mvn jar:jar - creates final war -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
				</plugin>

				<!-- mvn shade - creates shaded jar (1 jar containing everything including dependencies) -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<configuration>
						<createDependencyReducedPom>false</createDependencyReducedPom>
					</configuration>
				</plugin>

				<!-- plugin used to apply jUnit tests settings in maven and to generate report (target/surefire-reports)-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<!-- disable logging for maven's tests / Test in you IDE will log normally -->
						<argLine>-Dlog4j.configuration=</argLine>
						<testFailureIgnore>false</testFailureIgnore>
						<skip>false</skip>
						<runOrder>alphabetical</runOrder>
					</configuration>
				</plugin>

				<!-- Copy dependencies plug-in -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
				</plugin>

				<!-- Executing plug-in: mvn exec:java -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
				</plugin>

				<plugin>
					<groupId>eu.somatik.serviceloader-maven-plugin</groupId>
					<artifactId>serviceloader-maven-plugin</artifactId>
					<version>1.1.0</version>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											gwt-maven-plugin
										</artifactId>
										<versionRange>
											[2.5.1,)
										</versionRange>
										<goals>
											<goal>i18n</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-war-plugin
										</artifactId>
										<versionRange>
											[3.0.0,)
										</versionRange>
										<goals>
											<goal>exploded</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											eu.somatik.serviceloader-maven-plugin
										</groupId>
										<artifactId>
											serviceloader-maven-plugin
										</artifactId>
										<versionRange>
											[1.0.7,)
										</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

			</plugins>

		</pluginManagement>

		<plugins>
			<!--
			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.17</version>
				<executions>
					<execution>
						<id>checkstyle</id>
						<phase>compile</phase>
						<goals>
							<goal>checkstyle</goal>
						</goals>
						<configuration>
							<failsOnError>false</failsOnError>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<includes>**/*</includes>
					<resourceIncludes>**/*</resourceIncludes>
					<sourceDirectories>
						<sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
						<sourceDirectory>./perun-utils</sourceDirectory>
						<sourceDirectory>./perun-apps</sourceDirectory>
						<sourceDirectory>./perun-php</sourceDirectory>
						<sourceDirectory>./perun-cli</sourceDirectory>
					</sourceDirectories>
				</configuration>
			</plugin>
			-->
		</plugins>
	</build>

	<!-- DEFAULT MAVEN DEPENDENCY SETTINGS

     - most dependency versions are inherited from platform-bom, specify only those that are not defined by the platform
	 - child modules inherits settings (e.g. version, scope), not dependency itself
	 - to explicitly use one of listed dependencies in module just specify groupId and artifactId in it's dependencies section
	 - child module can override any setting by defining value in child module (or it's profile)
	 - beware, that default action on dependency configuration is MERGE !!
	 - if merged values are defined in both (parent and child module), than module value is used

	-->
	<dependencyManagement>
		<dependencies>

			<!-- Oracle jdbc driver -->
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc8</artifactId>
				<version>${oracle.version}</version>
			</dependency>
			<!-- Oracle internationalization -->
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>orai18n</artifactId>
				<version>${oracle.version}</version>
			</dependency>

			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>${cglib-nodep.version}</version>
			</dependency>

			<dependency>
				<groupId>net.jcip</groupId>
				<artifactId>jcip-annotations</artifactId>
				<version>${jcip.version}</version>
			</dependency>

			<dependency>
				<groupId>com.opencsv</groupId>
				<artifactId>opencsv</artifactId>
				<version>${opencsv.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.apis</groupId>
				<artifactId>google-api-services-admin-directory</artifactId>
				<version>${google-api-services-admin-directory.version}</version>
			</dependency>

			<dependency>
				<groupId>jdom</groupId>
				<artifactId>jdom</artifactId>
				<version>${jdom.version}</version>
			</dependency>

			<dependency>
				<groupId>net.jodah</groupId>
				<artifactId>expiringmap</artifactId>
				<version>${expiringmap.version}</version>
			</dependency>

			<dependency>
				<groupId>dumbster</groupId>
				<artifactId>dumbster</artifactId>
				<version>${dumbster.version}</version>
			</dependency>

			<dependency>
				<groupId>jivesoftware</groupId>
				<artifactId>smackx</artifactId>
				<version>${smackx.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hornetq</groupId>
				<artifactId>hornetq-core</artifactId>
				<version>${hornetq.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hornetq</groupId>
				<artifactId>hornetq-jms</artifactId>
				<version>${hornetq.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hornetq</groupId>
				<artifactId>hornetq-logging</artifactId>
				<version>${hornetq.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hornetq</groupId>
				<artifactId>hornetq-core-client</artifactId>
				<version>${hornetq.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hornetq</groupId>
				<artifactId>hornetq-jms-client</artifactId>
				<version>${hornetq.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.netty</groupId>
				<artifactId>netty</artifactId>
				<version>${netty3.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.javaee</groupId>
				<artifactId>jboss-jms-api</artifactId>
				<version>${jboss-jms-api.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- Perun project info -->
	<name>perun</name>
	<description>Identity and Access Management System</description>

	<organization>
		<name>CESNET, z.s.p.o.</name>
		<url>http://www.cesnet.cz/</url>
	</organization>

	<inceptionYear>2010</inceptionYear>

	<url>https://perun.cesnet.cz/web/</url>

	<scm>
		<connection>scm:git:https://github.com/CESNET/perun.git</connection>
		<url>https://github.com/CESNET/perun</url>
		<developerConnection>scm:git:https://github.com/CESNET/perun.git</developerConnection>
	</scm>

</project>
