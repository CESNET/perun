<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
">

	<!-- FIXME  hack, hackiti hack - inject properties bean into static class Utils
             	(creates another bean, that is never used)
             	The point is to stop Utils from complaining about non-existent /etc/perun/perun.properties.
	-->
	<bean id="utilsProperties" class="cz.metacentrum.perun.core.api.BeansUtils" factory-method="setProperties" scope="singleton">
		<constructor-arg ref="coreProperties" />
	</bean>

	<!-- Properties Bean for perun-core -->
	<beans profile="devel,production">
		<bean id="coreProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="locations">
				<list>
					<value>file:${perun.conf}perun.properties</value>
					<value>file:${perun.conf.custom}perun.properties</value>
				</list>
			</property>
			<property name="ignoreResourceNotFound" value="true" />
			<property name="properties">
				<props>
					<prop key="perun.admins">perunTests, perunController, perunEngine, perunDispatcher, perunRegistrar, perunSynchronizer, perunCabinet</prop>
					<prop key="perun.engine.principals">perunEngine</prop>
					<prop key="perun.registrar.principals"></prop>
					<prop key="perun.notification.principals">perunNotifications</prop>
					<prop key="perun.rpc.principal">perunRpc</prop>
					<prop key="perun.db.type">hsqldb</prop>
					<prop key="perun.group.synchronization.interval">1</prop>
					<prop key="perun.group.synchronization.timeout">10</prop>
					<prop key="perun.rpc.powerusers"></prop>
					<prop key="perun.perun.db.name">perun</prop>
					<prop key="perun.rt.url">https://rt3.cesnet.cz/rt/REST/1.0/ticket/new</prop>
					<prop key="perun.rt.serviceuser.username">perunv3-rt</prop>
					<prop key="perun.rt.serviceuser.password">password</prop>
					<prop key="perun.passwordManager.program">/usr/local/bin/perun.passwordManager</prop>
					<prop key="perun.alternativePasswordManager.program">/usr/local/bin/perun.altPasswordManager</prop>
					<prop key="perun.recaptcha.privatekey"></prop>
					<prop key="perun.mailchange.secretKey"></prop>
					<prop key="perun.mailchange.backupFrom"></prop>
					<prop key="perun.mailchange.validationWindow">6</prop>
					<prop key="perun.pwdreset.secretKey">jda3ufK92DKs2335af</prop>
					<prop key="perun.pwdreset.initVector">2Akd14k3o9s1d2G5</prop>
					<prop key="perun.pwdreset.validationWindow">6</prop>
					<prop key="perun.native.language">cs,Česky,Czech</prop>
					<prop key="perun.loginNamespace.generated"></prop>
				</props>
			</property>
		</bean>
	</beans>

	<beans profile="default">
		<bean id="coreProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="properties">
				<props>
					<prop key="perun.admins">perunTests, perunController, perunEngine, perunDispatcher, perunRegistrar, perunSynchronizer, perunCabinet</prop>
					<prop key="perun.engine.principals">perunEngine</prop>
					<prop key="perun.registrar.principals"></prop>
					<prop key="perun.notification.principals">perunNotifications</prop>
					<prop key="perun.rpc.principal">perunRpc</prop>
					<prop key="perun.db.type">hsqldb</prop>
					<prop key="perun.group.synchronization.interval">1</prop>
					<prop key="perun.group.synchronization.timeout">10</prop>
					<prop key="perun.rpc.powerusers"></prop>
					<prop key="perun.perun.db.name">perun</prop>
					<prop key="perun.rt.url">https://rt3.cesnet.cz/rt/REST/1.0/ticket/new</prop>
					<prop key="perun.rt.serviceuser.username">perunv3-rt</prop>
					<prop key="perun.rt.serviceuser.password">password</prop>
					<prop key="perun.passwordManager.program">/usr/local/bin/perun.passwordManager</prop>
					<prop key="perun.alternativePasswordManager.program">/usr/local/bin/perun.altPasswordManager</prop>
					<prop key="perun.recaptcha.privatekey"></prop>
					<prop key="perun.mailchange.secretKey"></prop>
					<prop key="perun.mailchange.backupFrom"></prop>
					<prop key="perun.mailchange.validationWindow">6</prop>
					<prop key="perun.pwdreset.secretKey">jda3ufK92DKs2335af</prop>
					<prop key="perun.pwdreset.initVector">2Akd14k3o9s1d2G5</prop>
					<prop key="perun.pwdreset.validationWindow">6</prop>
					<prop key="perun.native.language">cs,Česky,Czech</prop>
					<prop key="perun.loginNamespace.generated"></prop>
					<prop key="perun.sms.program"></prop>
					<prop key="perun.readOnlyPerun">false</prop>
					<prop key="perun.DBInitializatorEnabled">false</prop>
				</props>
			</property>
		</bean>
	</beans>

</beans>
