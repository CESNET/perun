-- Changelog file should have the newest version at the top, the oldest at the bottom.
-- Versions must be separated by empty lines, version number should consist of three numbers with dots between, f.e. 3.0.1 is ok, 3.1 or 3.1.1.1 is not.
-- Directly under version number should be version commands. They will be executed in the order they are written here.
-- Comments are prefixed with -- and can be written only between version blocks, that means not in the lines with commands. They have to be at the start of the line.

3.1.41
alter table tasks add constraint task_u unique (exec_service_id, facility_id);
update configurations set value='3.1.41' where property='DATABASE VERSION';

3.1.40
alter table tasks alter column engine_id drop not null;
update configurations set value='3.1.40' where property='DATABASE VERSION';

3.1.39
alter table user_ext_sources alter column login_ext type varchar(1300);
alter table cabinet_publications alter column createdby type varchar(1300);
alter table cabinet_authorships alter column createdby type varchar(1300);
alter table cabinet_thanks alter column createdby type varchar(1300);
alter table user_ext_source_attr_values alter column created_by type varchar(1300);
alter table user_ext_sources alter column created_by type varchar(1300);
alter table attr_names alter column created_by type varchar(1300);
alter table users alter column created_by type varchar(1300);
alter table vos alter column created_by type varchar(1300);
alter table ext_sources alter column created_by type varchar(1300);
alter table members alter column created_by type varchar(1300);
alter table owners alter column created_by type varchar(1300);
alter table hosts alter column created_by type varchar(1300);
alter table services alter column created_by type varchar(1300);
alter table exec_services alter column created_by type varchar(1300);
alter table destinations alter column created_by type varchar(1300);
alter table facility_service_destinations alter column created_by type varchar(1300);
alter table vo_ext_sources alter column created_by type varchar(1300);
alter table group_ext_sources alter column created_by type varchar(1300);
alter table ext_sources_attributes alter column created_by type varchar(1300);
alter table facilities alter column created_by type varchar(1300);
alter table resources alter column created_by type varchar(1300);
alter table resource_attr_values alter column created_by type varchar(1300);
alter table user_attr_values alter column created_by type varchar(1300);
alter table facility_owners alter column created_by type varchar(1300);
alter table facility_attr_values alter column created_by type varchar(1300);
alter table vo_attr_values alter column created_by type varchar(1300);
alter table service_packages alter column created_by type varchar(1300);
alter table service_service_packages alter column created_by type varchar(1300);
alter table groups alter column created_by type varchar(1300);
alter table member_resource_attr_values alter column created_by type varchar(1300);
alter table member_group_attr_values alter column created_by type varchar(1300);
alter table user_facility_attr_values alter column created_by type varchar(1300);
alter table tasks_results alter column created_by type varchar(1300);
alter table service_denials alter column created_by type varchar(1300);
alter table service_dependencies alter column created_by type varchar(1300);
alter table engines alter column created_by type varchar(1300);
alter table dispatcher_settings alter column created_by type varchar(1300);
alter table service_required_attrs alter column created_by type varchar(1300);
alter table resource_services alter column created_by type varchar(1300);
alter table routing_rules alter column created_by type varchar(1300);
alter table engine_routing_rule alter column created_by type varchar(1300);
alter table processing_rules alter column created_by type varchar(1300);
alter table service_processing_rule alter column created_by type varchar(1300);
alter table member_attr_values alter column created_by type varchar(1300);
alter table group_attr_values alter column created_by type varchar(1300);
alter table group_resource_attr_values alter column created_by type varchar(1300);
alter table host_attr_values alter column created_by type varchar(1300);
alter table application alter column created_by type varchar(1300);
alter table application_reserved_logins alter column created_by type varchar(1300);
alter table auditer_consumers alter column created_by type varchar(1300);
alter table entityless_attr_values alter column created_by type varchar(1300);
alter table groups_resources alter column created_by type varchar(1300);
alter table groups_members alter column created_by type varchar(1300);
alter table service_principals alter column created_by type varchar(1300);
alter table groups_groups alter column created_by type varchar(1300);
alter table res_tags alter column created_by type varchar(1300);
alter table mailchange alter column created_by type varchar(1300);
alter table pwdreset alter column created_by type varchar(1300);
alter table security_teams alter column created_by type varchar(1300);
alter table security_teams_facilities alter column created_by type varchar(1300);
alter table blacklists alter column created_by type varchar(1300);
alter table resources_bans alter column created_by type varchar(1300);
alter table facilities_bans alter column created_by type varchar(1300);
alter table user_ext_source_attr_values alter column modified_by type varchar(1300);
alter table user_ext_sources alter column modified_by type varchar(1300);
alter table attr_names alter column modified_by type varchar(1300);
alter table users alter column modified_by type varchar(1300);
alter table vos alter column modified_by type varchar(1300);
alter table ext_sources alter column modified_by type varchar(1300);
alter table members alter column modified_by type varchar(1300);
alter table owners alter column modified_by type varchar(1300);
alter table hosts alter column modified_by type varchar(1300);
alter table services alter column modified_by type varchar(1300);
alter table exec_services alter column modified_by type varchar(1300);
alter table destinations alter column modified_by type varchar(1300);
alter table facility_service_destinations alter column modified_by type varchar(1300);
alter table vo_ext_sources alter column modified_by type varchar(1300);
alter table group_ext_sources alter column modified_by type varchar(1300);
alter table ext_sources_attributes alter column modified_by type varchar(1300);
alter table facilities alter column modified_by type varchar(1300);
alter table resources alter column modified_by type varchar(1300);
alter table resource_attr_values alter column modified_by type varchar(1300);
alter table user_attr_values alter column modified_by type varchar(1300);
alter table facility_owners alter column modified_by type varchar(1300);
alter table facility_attr_values alter column modified_by type varchar(1300);
alter table vo_attr_values alter column modified_by type varchar(1300);
alter table service_packages alter column modified_by type varchar(1300);
alter table service_service_packages alter column modified_by type varchar(1300);
alter table groups alter column modified_by type varchar(1300);
alter table member_resource_attr_values alter column modified_by type varchar(1300);
alter table member_group_attr_values alter column modified_by type varchar(1300);
alter table user_facility_attr_values alter column modified_by type varchar(1300);
alter table tasks_results alter column modified_by type varchar(1300);
alter table service_denials alter column modified_by type varchar(1300);
alter table service_dependencies alter column modified_by type varchar(1300);
alter table engines alter column modified_by type varchar(1300);
alter table dispatcher_settings alter column modified_by type varchar(1300);
alter table service_required_attrs alter column modified_by type varchar(1300);
alter table resource_services alter column modified_by type varchar(1300);
alter table routing_rules alter column modified_by type varchar(1300);
update configurations set value='3.1.39' where property='DATABASE VERSION';

3.1.38
create table "user_ext_source_attr_values" ( user_ext_source_id integer not null, attr_id integer not null, attr_value varchar(4000), created_at timestamp default now() not null, created_by varchar(1024) default user not null, modified_at timestamp default now() not null, modified_by varchar(1024) default user not null, status char(1) default '0' not null, attr_value_text text, created_by_uid integer, modified_by_uid integer );
create index idx_fk_ues_attr_values_ues on user_ext_source_attr_values (user_ext_source_id);
create index idx_fk_ues_attr_values_attr on user_ext_source_attr_values (attr_id);
alter table user_ext_source_attr_values add constraint uesattrval_pk primary key (user_ext_source_id, attr_id);
alter table user_ext_source_attr_values add constraint uesattrval_ues_fk foreign key (user_ext_source_id) references user_ext_sources(id);
alter table user_ext_source_attr_values add constraint uesattrval_attr_fk foreign key (attr_id) references attr_names(id);
grant all on user_ext_source_attr_values to perun;
update configurations set value='3.1.38' where property='DATABASE VERSION';

3.1.37
ALTER TABLE groups_groups RENAME group_id TO result_gid;
ALTER TABLE groups_groups RENAME parent_group_id TO operand_gid;
ALTER TABLE groups_groups ADD COLUMN parent_flag BOOLEAN DEFAULT FALSE;
ALTER TABLE groups_groups DROP COLUMN group_mode;
DROP INDEX idx_fk_grp_grp_gid;
DROP INDEX idx_fk_grp_grp_pgid;
CREATE INDEX idx_fk_grp_grp_rgid ON groups_groups(result_gid);
CREATE INDEX idx_fk_grp_grp_ogid ON groups_groups(operand_gid);
ALTER TABLE groups_groups DROP CONSTRAINT grp_grp_gid_fk;
ALTER TABLE groups_groups DROP CONSTRAINT grp_grp_pgid_fk;
ALTER TABLE groups_groups ADD CONSTRAINT grp_grp_rgid_fk FOREIGN KEY (result_gid) REFERENCES groups(id);
ALTER TABLE groups_groups ADD CONSTRAINT grp_grp_ogid_fk FOREIGN KEY (operand_gid) REFERENCES groups(id);
CREATE FUNCTION check_and_update_member(INTEGER, INTEGER, INTEGER, INTEGER) RETURNS VOID AS $$ BEGIN IF NOT EXISTS(SELECT 1 FROM groups_members WHERE group_id = $3 AND source_group_id = $2 AND groups_members.member_id = $4) THEN UPDATE groups_members SET source_group_id = $2 WHERE group_id = $3 AND source_group_id = $1 AND groups_members.member_id = $4; ELSE DELETE FROM groups_members WHERE group_id = $3 AND source_group_id = $1 AND groups_members.member_id = $4; END IF; END $$ LANGUAGE plpgsql;
CREATE FUNCTION recursive_hierarchy_check(INTEGER, INTEGER) RETURNS INTEGER AS $$ DECLARE parent_gid INTEGER; BEGIN SELECT parent_group_id INTO parent_gid FROM groups WHERE id = $2; IF parent_gid IS NOT NULL THEN PERFORM check_and_update_member($1, $2, parent_gid, member_id) FROM groups_members WHERE group_id = parent_gid AND source_group_id = $1; PERFORM recursive_hierarchy_check($1, parent_gid); END IF; RETURN parent_gid; END $$ LANGUAGE plpgsql;
SELECT recursive_hierarchy_check(id, parent_group_id) FROM groups WHERE groups.parent_group_id IS NOT NULL;
CREATE FUNCTION create_relations(INTEGER, INTEGER) RETURNS VOID AS $$ BEGIN IF NOT EXISTS(SELECT 1 FROM groups_groups WHERE result_gid = $2 AND operand_gid = $1) THEN INSERT INTO groups_groups(result_gid, operand_gid, parent_flag) VALUES ($2, $1, TRUE); END IF; END $$ LANGUAGE plpgsql;
SELECT create_relations(id, parent_group_id) FROM groups WHERE parent_group_id IS NOT NULL;
DROP FUNCTION create_relations(INTEGER, INTEGER);
DROP FUNCTION recursive_hierarchy_check(INTEGER, INTEGER);
DROP FUNCTION check_and_update_member(INTEGER,INTEGER,INTEGER,INTEGER);
UPDATE membership_types SET description = 'Member is added indirectly through UNION relation' WHERE membership_type = 'INDIRECT';
update configurations set value='3.1.37' where property='DATABASE VERSION';

3.1.36
create table "resources_bans" ( id integer not null, member_id integer not null, resource_id integer not null, description varchar(1024), banned_to timestamp not null, created_at timestamp default now() not null, created_by varchar(1024) default user not null, modified_at timestamp default now() not null, modified_by varchar(1024) default user not null, created_by_uid integer, modified_by_uid integer);
create table "facilities_bans" ( id integer not null, user_id integer not null, facility_id integer not null, description varchar(1024), banned_to timestamp not null, created_at timestamp default now() not null, created_by varchar(1024) default user not null, modified_at timestamp default now() not null, modified_by varchar(1024) default user not null, created_by_uid integer, modified_by_uid integer);
create sequence "resources_bans_id_seq" maxvalue 9223372036854775807;
create sequence "facilities_bans_id_seq" maxvalue 9223372036854775807;
alter table resources_bans add constraint res_bans_pk primary key (id);
alter table resources_bans add constraint res_bans_u unique (member_id, resource_id);
alter table resources_bans add constraint res_bans_mem_fk foreign key (member_id) references members (id);
alter table resources_bans add constraint res_bans_res_fk foreign key (resource_id) references resources (id);
alter table facilities_bans add constraint fac_bans_pk primary key (id);
alter table facilities_bans add constraint fac_bans_u unique (user_id, facility_id);
alter table facilities_bans add constraint fac_bans_usr_fk foreign key (user_id) references users (id);
alter table facilities_bans add constraint fac_bans_fac_fk foreign key (facility_id) references facilities (id);
create index idx_fk_res_ban_member on resources_bans (member_id);
create index idx_fk_res_ban_res on resources_bans (resource_id);
create index idx_fk_res_ban_member_res on resources_bans (member_id, resource_id);
create index idx_fk_fac_ban_user on facilities_bans (user_id);
create index idx_fk_fac_ban_fac on facilities_bans (facility_id);
create index idx_fk_fac_ban_user_fac on facilities_bans (user_id, facility_id);
grant all on resources_bans to perun;
grant all on facilities_bans to perun;
update configurations set value='3.1.36' where property='DATABASE VERSION';

3.1.35
alter table users add sponsored_acc char(1) default '0' not null;
drop index idx_fk_servu_u_ui;
drop index idx_fk_servu_u_sui;
alter table service_user_users drop constraint acc_servu_u_pk;
alter table service_user_users drop constraint acc_servu_u_uid_fk;
alter table service_user_users drop constraint acc_servu_u_suid_fk;
alter table service_user_users drop constraint servu_u_status_chk;
alter table service_user_users rename to specific_user_users;
alter table specific_user_users rename column service_user_id to specific_user_id;
alter table specific_user_users add type varchar(20) default 'service' not null;
create index idx_fk_specifu_u_ui on specific_user_users(user_id);
create index idx_fk_specifu_u_sui on specific_user_users(specific_user_id);
alter table specific_user_users add constraint acc_specifu_u_pk primary key (user_id,specific_user_id);
alter table specific_user_users add constraint acc_specifu_u_uid_fk foreign key (user_id) references users(id);
alter table specific_user_users add constraint acc_specifu_u_suid_fk foreign key (specific_user_id) references users(id);
alter table specific_user_users add constraint specifu_u_status_chk check (status in ('0','1'));
alter table authz add sponsored_user_id integer;
create index idx_fk_authz_sponsu on authz(sponsored_user_id);
drop index idx_authz_u2;
create unique index idx_authz_u ON authz (COALESCE(user_id, '0'), COALESCE(authorized_group_id, '0'), COALESCE(service_principal_id, '0'), role_id, COALESCE(group_id, '0'), COALESCE(vo_id, '0'), COALESCE(facility_id, '0'), COALESCE(member_id, '0'), COALESCE(resource_id, '0'), COALESCE(service_id, '0'), COALESCE(security_team_id, '0'), COALESCE(sponsored_user_id, '0'));
alter table authz add constraint authz_sponsu_fk foreign key (sponsored_user_id) references users(id);
update configurations set value='3.1.35' where property='DATABASE VERSION';

3.1.34
update configurations set value='3.1.34' where property='DATABASE VERSION';

3.1.33
alter table service_denials drop constraint srvden_u;
alter table service_denials add constraint srvden_u check(exec_service_id is not null and ((facility_id is not null and destination_id is null) or (facility_id is null and destination_id is not null)));
create unique index idx_srvden_u ON service_denials(COALESCE(exec_service_id, '0'), COALESCE(facility_id, '0'), COALESCE(destination_id, '0'));
update configurations set value='3.1.33' where property='DATABASE VERSION';

3.1.32
alter table users alter column title_before type varchar(40);
alter table users alter column title_after type varchar(40);
update configurations set value='3.1.32' where property='DATABASE VERSION';

3.1.31
alter table blacklists add constraint bllist_pk primary key (security_team_id,user_id);
alter table blacklists add constraint bllist_secteam_fk foreign key (security_team_id) references security_teams (id);
alter table blacklists add constraint bllist_user_fk foreign key (user_id) references users(id);
create index idx_fk_security_teams_facilities_security_team on security_teams_facilities (security_team_id);
create index idx_fk_security_teams_facilities_facilities on security_teams_facilities (facility_id);
create index idx_fk_bllist_user on blacklists (user_id);
create index idx_fk_bllist_secteam on blacklists (security_team_id);
update configurations set value='3.1.31' where property='DATABASE VERSION';

3.1.30
drop index idx_fk_serv_ow;
alter table services drop constraint serv_ow_fk;
alter table services drop column owner_id;
update configurations set value='3.1.30' where property='DATABASE VERSION';

3.1.29
alter table authz add security_team_id integer;
create table "security_teams" ( id integer not null, name varchar(128) not null, description varchar(1024), created_at timestamp default now() not null, created_by varchar(1024) default user not null, modified_at timestamp default now() not null, modified_by varchar(1024) default user not null, created_by_uid integer, modified_by_uid integer);
create table "security_teams_facilities" ( security_team_id integer not null, facility_id integer not null, created_at timestamp default now() not null, created_by varchar(1024) default user not null, modified_at timestamp default now() not null, modified_by varchar(1024) default user not null, created_by_uid integer, modified_by_uid integer);
create table "blacklists" ( security_team_id integer not null, user_id integer not null, description varchar(1024), created_at timestamp default now() not null, created_by varchar(1024) default user not null, modified_at timestamp default now() not null, modified_by varchar(1024) default user not null, created_by_uid integer, modified_by_uid integer);
create sequence "security_teams_id_seq" maxvalue 9223372036854775807;
alter table security_teams add constraint security_teams_pk primary key (id);
alter table security_teams_facilities add constraint security_teams_facilities_pk primary key (security_team_id, facility_id);
alter table security_teams_facilities add constraint security_teams_facilities_security_team_fk foreign key (security_team_id) references security_teams(id);
alter table security_teams_facilities add constraint security_teams_facilities_facilities_fk foreign key (facility_id) references facilities(id);
create index idx_fk_authz_sec_team on authz(security_team_id);
alter table authz add constraint authz_sec_team_fk foreign key (security_team_id) references security_teams(id);
drop index idx_authz_u2;
create unique index idx_authz_u2 ON authz (COALESCE(user_id, '0'), COALESCE(authorized_group_id, '0'), COALESCE(service_principal_id, '0'), role_id, COALESCE(group_id, '0'), COALESCE(vo_id, '0'), COALESCE(facility_id, '0'), COALESCE(member_id, '0'), COALESCE(resource_id, '0'), COALESCE(service_id, '0'), COALESCE(security_team_id, '0'));
grant all on security_teams to perun;
grant all on security_teams_facilities to perun;
grant all on blacklists to perun;
update configurations set value='3.1.29' where property='DATABASE VERSION';

3.1.28
DROP INDEX idx_faccont_u2;
ALTER TABLE facility_contacts RENAME COLUMN contact_group_name TO name;
create unique index idx_faccont_u2 ON facility_contacts (user_id, owner_id, group_id, facility_id, name);
update configurations set value='3.1.28' where property='DATABASE VERSION';

3.1.27
create table "group_ext_sources" ( group_id integer not null, ext_source_id integer not null, created_at timestamp default now() not null, created_by varchar(1024) default user not null, modified_at timestamp default now() not null, modified_by varchar(1024) default user not null, created_by_uid integer, modified_by_uid integer);
create index idx_fk_groupsrc_src on group_ext_sources(ext_source_id);
create index idx_fk_groupsrc_group on group_ext_sources(group_id);
alter table group_ext_sources add constraint groupsrc_pk primary key (group_id,ext_source_id);
alter table group_ext_sources add constraint groupsrc_src_fk foreign key(ext_source_id) references ext_sources(id);
alter table group_ext_sources add constraint groupsrc_groups_fk foreign key(group_id) references groups(id);
grant all on group_ext_sources to perun;
update configurations set value='3.1.27' where property='DATABASE VERSION';

3.1.26
create table "facility_contacts" (contact_group_name varchar(128) not null,facility_id integer not null,owner_id integer,user_id integer,group_id integer);
create index idx_fk_faccont_fac on facility_contacts(facility_id);
create index idx_fk_faccont_usr on facility_contacts(user_id);
create index idx_fk_faccont_own on facility_contacts(owner_id);
create index idx_fk_faccont_grp on facility_contacts(group_id);
create unique index idx_faccont_u2 ON facility_contacts (COALESCE(user_id, '0'), COALESCE(owner_id, '0'), COALESCE(group_id, '0'), facility_id, contact_group_name);
alter table facility_contacts add constraint faccont_fac_fk foreign key (facility_id) references facilities(id);
alter table facility_contacts add constraint faccont_usr_fk foreign key (user_id) references users(id);
alter table facility_contacts add constraint faccont_own_fk foreign key (owner_id) references owners(id);
alter table facility_contacts add constraint faccont_grp_fk foreign key (group_id) references groups(id);
alter table facility_contacts add constraint faccont_usr_own_grp_chk check ((user_id is not null and owner_id is null and group_id is null) or (user_id is null and owner_id is not null and group_id is null) or (user_id is null and owner_id is null and group_id is not null));
grant all on facility_contacts to perun;
update configurations set value='3.1.26' where property='DATABASE VERSION';

3.1.25
alter table service_dependencies add constraint srvdep_u unique(exec_service_id,dependency_id);
alter table service_denials add constraint srvden_u unique(exec_service_id,facility_id,destination_id);
update configurations set value='3.1.25' where property='DATABASE VERSION';
