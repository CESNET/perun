<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
">

	<import resource="classpath:perun-base.xml"/>

	<aop:config>
		<aop:advisor advice-ref="txAdviceReadOnly" pointcut="execution(* cz.metacentrum.perun.core.entry.ServicesManagerEntry.getHierarchicalData(..))"/>
		<aop:advisor advice-ref="txAdviceReadOnly" pointcut="execution(* cz.metacentrum.perun.core.entry.ServicesManagerEntry.getDataWithGroups(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.entry.*.*(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.blImpl.AttributesManagerBlImpl.setAttributeInNestedTransaction(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.AttributesManagerImpl.insertAttribute(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.AttributesManagerImpl.updateAttribute(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.blImpl.AttributesManagerBlImpl.mergeAttributeValueInNestedTransaction(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.blImpl.MembersManagerBlImpl.validateMember(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.blImpl.MembersManagerBlImpl.createMemberSync(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.blImpl.GroupsManagerBlImpl.synchronizeGroup(..))"/>
		<!--<aop:advisor advice-ref="txAdviceAuditerTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.Auditer.*.*(..))"/>-->
		<aop:advisor advice-ref="txAdviceNoneTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ExtSourceSql.*(..))"/>
		<aop:advisor advice-ref="txAdviceNoneTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ExtSourceSqlComplex.*(..))"/>
		<aop:advisor advice-ref="txAdviceNoneTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.Auditer.flush(..))"/>
		<aop:advisor advice-ref="txAdviceNoneTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.Auditer.storeMessageToDb(..))"/>
		<aop:advisor advice-ref="txAdviceNoneTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.Auditer.storeMessagesToDb(..))"/>
		<aop:advisor advice-ref="txAdviceRequiresNewTransaction" pointcut="execution(* cz.metacentrum.perun.core.blImpl.GroupsManagerBlImpl.saveInformationAboutGroupSynchronization(..))"/>
		<!-- START OF NESTED TRANSACTIONS FOR COMPATIBILITY WITH POSTGRESQL -->
		<!-- AttributesManagerImpl -->
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.AttributesManagerImpl.setAttributeWithNullValue(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.AttributesManagerImpl.setVirtualAttribute(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.AttributesManagerImpl.createAttribute(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.AttributesManagerImpl.changedAttributeHook(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.AttributesManagerImpl.updateAttributeDefinition(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.AttributesManagerImpl.setAttributeRight(..))"/>
		<!-- AuthzResolverImpl -->
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.AuthzResolverImpl.addAdmin(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.AuthzResolverImpl.addVoRole(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.AuthzResolverImpl.makeUserPerunAdmin(..))"/>
		<!-- ExtSourcesManagerImpl -->
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ExtSourcesManagerImpl.createExtSource(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ExtSourcesManagerImpl.updateExtSource(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ExtSourcesManagerImpl.addExtSource(..))"/>
		<!-- FacilitiesManagerImpl -->
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.FacilitiesManagerImpl.createFacility(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.FacilitiesManagerImpl.updateFacility(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.FacilitiesManagerImpl.setOwners(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.FacilitiesManagerImpl.addOwner(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.FacilitiesManagerImpl.addHost(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.FacilitiesManagerImpl.addFacilityContact(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.FacilitiesManagerImpl.assignSecurityTeam(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.FacilitiesManagerImpl.setBan(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.FacilitiesManagerImpl.updateBan(..))"/>
		<!-- GroupsManagerImpl -->
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.GroupsManagerImpl.createGroup(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.GroupsManagerImpl.updateGroup(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.GroupsManagerImpl.updateGroupName(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.GroupsManagerImpl.addMember(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.GroupsManagerImpl.saveGroupRelation(..))"/>
		<!-- MembersManagerImpl -->
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.MembersManagerImpl.createMember(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.MembersManagerImpl.setStatus(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.MembersManagerImpl.storePasswordResetRequest(..))"/>
		<!-- OwnersManagerImpl -->
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.OwnersManagerImpl.createOwner(..))"/>
		<!-- ResourcesManagerImpl -->
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ResourcesManagerImpl.createResource(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ResourcesManagerImpl.setFacility(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ResourcesManagerImpl.assignGroupToResource(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ResourcesManagerImpl.assignService(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ResourcesManagerImpl.updateResource(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ResourcesManagerImpl.createResourceTag(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ResourcesManagerImpl.updateResourceTag(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ResourcesManagerImpl.assignResourceTagToResource(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ResourcesManagerImpl.setBan(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ResourcesManagerImpl.updateBan(..))"/>
		<!-- SecurityTeamsManagerImpl -->
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.SecurityTeamsManagerImpl.createSecurityTeam(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.SecurityTeamsManagerImpl.updateSecurityTeam(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.SecurityTeamsManagerImpl.addUserToBlacklist(..))"/>
		<!-- ServicesManagerImpl -->
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ServicesManagerImpl.createService(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ServicesManagerImpl.updateService(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ServicesManagerImpl.createServicesPackage(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ServicesManagerImpl.updateServicesPackage(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ServicesManagerImpl.addServiceToServicesPackage(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ServicesManagerImpl.addRequiredAttribute(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ServicesManagerImpl.addDestination(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.ServicesManagerImpl.createDestination(..))"/>
		<!-- UsersManagerImpl -->
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.UsersManagerImpl.addSpecificUserOwner(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.UsersManagerImpl.enableOwnership(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.UsersManagerImpl.disableOwnership(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.UsersManagerImpl.createUser(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.UsersManagerImpl.updateUser(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.UsersManagerImpl.updateNameTitles(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.UsersManagerImpl.updateUserExtSourceLastAccess(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.UsersManagerImpl.updateUserExtSource(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.UsersManagerImpl.addUserExtSource(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.UsersManagerImpl.requestPreferredEmailChange(..))"/>
		<!-- VosManagerImpl -->
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.VosManagerImpl.createVo(..))"/>
		<aop:advisor advice-ref="txAdviceNestedTransaction" pointcut="execution(* cz.metacentrum.perun.core.impl.VosManagerImpl.updateVo(..))"/>
		<!-- END OF NESTED TRANSACTIONS FOR COMPATIBILITY WITH POSTGRESQL -->
	</aop:config>

	<tx:advice id="txAdviceCommon" transaction-manager="perunTransactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	<tx:advice id="txAdviceNoneTransaction" transaction-manager="perunTransactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="NOT_SUPPORTED"/>
		</tx:attributes>
	</tx:advice>
	<tx:advice id="txAdviceAuditerTransaction" transaction-manager="perunTransactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<tx:advice id="txAdviceNestedTransaction" transaction-manager="perunTransactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" rollback-for="Exception" propagation="NESTED"/>
		</tx:attributes>
	</tx:advice>
	<tx:advice id="txAdviceReadOnly" transaction-manager="perunTransactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="true" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<tx:advice id="txAdviceRequiresNewTransaction" transaction-manager="perunTransactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" propagation="REQUIRES_NEW"/>
		</tx:attributes>
	</tx:advice>

	<!--FIXME   hack ktery donuti spring zavolat statickou metodu -->
	<bean class="cz.metacentrum.perun.core.blImpl.AuthzResolverBlImpl" factory-method="setAuthzResolverImpl" scope="singleton">
		<constructor-arg ref="authzResolverImpl" />
	</bean>

	<bean class="cz.metacentrum.perun.core.blImpl.AuthzResolverBlImpl" factory-method="setPerunBl" scope="singleton">
		<constructor-arg ref="perun" />
	</bean>

	<!-- Perun implementation -->
	<bean id="perun" class="cz.metacentrum.perun.core.blImpl.PerunBlImpl" scope="singleton" init-method="initialize" depends-on="databaseManagerBl">
		<constructor-arg name="auditer" ref="auditer"/>
		<property name="vosManagerBl" ref="vosManagerBl"/>
		<property name="usersManagerBl" ref="usersManagerBl"/>
		<property name="groupsManagerBl" ref="groupsManagerBl"/>
		<property name="facilitiesManagerBl" ref="facilitiesManagerBl"/>
		<property name="membersManagerBl" ref="membersManagerBl"/>
		<property name="resourcesManagerBl" ref="resourcesManagerBl"/>
		<property name="extSourcesManagerBl" ref="extSourcesManagerBl"/>
		<property name="attributesManagerBl" ref="attributesManagerBl"/>
		<property name="servicesManagerBl" ref="servicesManagerBl"/>
		<property name="ownersManagerBl" ref="ownersManagerBl"/>
		<property name="auditMessagesManagerBl" ref="auditMessagesManagerBl"/>
		<property name="RTMessagesManagerBl" ref="RTMessagesManagerBl"/>
		<property name="securityTeamsManagerBl" ref="securityTeamsManagerBl"/>
		<property name="searcherBl" ref="searcherBl"/>
		<property name="modulesUtilsBl" ref="modulesUtilsBl"/>
		<property name="databaseManagerBl" ref="databaseManagerBl"/>
		<property name="vosManager" ref="vosManager"/>
		<property name="usersManager" ref="usersManager"/>
		<property name="groupsManager" ref="groupsManager"/>
		<property name="facilitiesManager" ref="facilitiesManager"/>
		<property name="membersManager" ref="membersManager"/>
		<property name="resourcesManager" ref="resourcesManager"/>
		<property name="extSourcesManager" ref="extSourcesManager"/>
		<property name="attributesManager" ref="attributesManager"/>
		<property name="servicesManager" ref="servicesManager"/>
		<property name="ownersManager" ref="ownersManager"/>
		<property name="auditMessagesManager" ref="auditMessagesManager"/>
		<property name="RTMessagesManager" ref="RTMessagesManager"/>
		<property name="securityTeamsManager" ref="securityTeamsManager"/>
		<property name="searcher" ref="searcher"/>
		<property name="cacheManager" ref="cacheManager"/>
		<property name="attributesManagerImpl" ref="attributesManagerImpl"/>
		<property name="databaseManager" ref="databaseManager"/>
		<property name="coreConfig" ref="coreConfig"/>
	</bean>

	<bean id="vosManager" class="cz.metacentrum.perun.core.entry.VosManagerEntry" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="vosManagerBl" ref="vosManagerBl"/>
	</bean>
	<bean id="usersManager" class="cz.metacentrum.perun.core.entry.UsersManagerEntry" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="usersManagerBl" ref="usersManagerBl"/>
	</bean>
	<bean id="groupsManager" class="cz.metacentrum.perun.core.entry.GroupsManagerEntry" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="groupsManagerBl" ref="groupsManagerBl"/>
	</bean>
	<bean id="facilitiesManager" class="cz.metacentrum.perun.core.entry.FacilitiesManagerEntry" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="facilitiesManagerBl" ref="facilitiesManagerBl"/>
	</bean>
	<bean id="databaseManager" class="cz.metacentrum.perun.core.entry.DatabaseManagerEntry" scope="singleton">
		<property name="databaseManagerBl" ref="databaseManagerBl"/>
	</bean>
	<bean id="membersManager" class="cz.metacentrum.perun.core.entry.MembersManagerEntry" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="membersManagerBl" ref="membersManagerBl"/>
	</bean>
	<bean id="resourcesManager" class="cz.metacentrum.perun.core.entry.ResourcesManagerEntry" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="resourcesManagerBl" ref="resourcesManagerBl"/>
	</bean>
	<bean id="extSourcesManager" class="cz.metacentrum.perun.core.entry.ExtSourcesManagerEntry" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="extSourcesManagerBl" ref="extSourcesManagerBl"/>
	</bean>
	<bean id="attributesManager" class="cz.metacentrum.perun.core.entry.AttributesManagerEntry" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="attributesManagerBl" ref="attributesManagerBl"/>
	</bean>
	<bean id="servicesManager" class="cz.metacentrum.perun.core.entry.ServicesManagerEntry" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="servicesManagerBl" ref="servicesManagerBl"/>
	</bean>
	<bean id="ownersManager" class="cz.metacentrum.perun.core.entry.OwnersManagerEntry" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="ownersManagerBl" ref="ownersManagerBl"/>
	</bean>
	<bean id="auditMessagesManager" class="cz.metacentrum.perun.core.entry.AuditMessagesManagerEntry" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="auditMessagesManagerBl" ref="auditMessagesManagerBl"/>
	</bean>
	<bean id="RTMessagesManager" class="cz.metacentrum.perun.core.entry.RTMessagesManagerEntry" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="RTMessagesManagerBl" ref="RTMessagesManagerBl"/>
	</bean>
	<bean id="securityTeamsManager" class="cz.metacentrum.perun.core.entry.SecurityTeamsManagerEntry" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="securityTeamsManagerBl" ref="securityTeamsManagerBl"/>
	</bean>
	<bean id="searcher" class="cz.metacentrum.perun.core.entry.SearcherEntry" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="searcherBl" ref="searcherBl"/>
	</bean>
	<bean id="vosManagerBl" class="cz.metacentrum.perun.core.blImpl.VosManagerBlImpl" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<constructor-arg ref="vosManagerImpl" />
	</bean>
	<bean id="usersManagerBl" class="cz.metacentrum.perun.core.blImpl.UsersManagerBlImpl" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<constructor-arg ref="usersManagerImpl" />
	</bean>
	<bean id="groupsManagerBl" class="cz.metacentrum.perun.core.blImpl.GroupsManagerBlImpl" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<constructor-arg ref="groupsManagerImpl" />
	</bean>
	<bean id="facilitiesManagerBl" class="cz.metacentrum.perun.core.blImpl.FacilitiesManagerBlImpl" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<constructor-arg ref="facilitiesManagerImpl" />
	</bean>
	<bean id="databaseManagerBl" class="cz.metacentrum.perun.core.blImpl.DatabaseManagerBlImpl" scope="singleton" init-method="initialize">
		<constructor-arg ref="databaseManagerImpl" />
	</bean>
	<bean id="membersManagerBl" class="cz.metacentrum.perun.core.blImpl.MembersManagerBlImpl" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<constructor-arg ref="membersManagerImpl" />
	</bean>
	<bean id="resourcesManagerBl" class="cz.metacentrum.perun.core.blImpl.ResourcesManagerBlImpl" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<constructor-arg ref="resourcesManagerImpl" />
	</bean>
	<bean id="extSourcesManagerBl" class="cz.metacentrum.perun.core.blImpl.ExtSourcesManagerBlImpl" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<constructor-arg ref="extSourcesManagerImpl" />
	</bean>
	<bean id="attributesManagerBl" class="cz.metacentrum.perun.core.blImpl.AttributesManagerBlImpl" scope="singleton" init-method="initialize" depends-on="authzResolverImpl">
		<!-- depend on authz resolver impl to make sure roles are inserted in DB before attribute authz is set -->
		<property name="perunBl" ref="perun"/>
		<constructor-arg ref="attributesManagerImpl" />
	</bean>
	<bean id="servicesManagerBl" class="cz.metacentrum.perun.core.blImpl.ServicesManagerBlImpl" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<constructor-arg ref="servicesManagerImpl" />
	</bean>
	<bean id="modulesUtilsBl" class="cz.metacentrum.perun.core.blImpl.ModulesUtilsBlImpl" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
	</bean>
	<bean id="ownersManagerBl" class="cz.metacentrum.perun.core.blImpl.OwnersManagerBlImpl" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<constructor-arg ref="ownersManagerImpl" />
	</bean>
	<bean id="auditMessagesManagerBl" class="cz.metacentrum.perun.core.blImpl.AuditMessagesManagerBlImpl" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<property name="auditer" ref="auditer"/>
	</bean>
	<bean id="RTMessagesManagerBl" class="cz.metacentrum.perun.core.blImpl.RTMessagesManagerBlImpl" scope="singleton" depends-on="databaseManagerBl">
		<constructor-arg name="perunBl" ref="perun"/>
		<constructor-arg name="rtURL" value="#{coreConfig.rtUrl}"/>
		<constructor-arg name="rtDefaultQueue" value="#{coreConfig.rtDefaultQueue}"/>
	</bean>
	<bean id="securityTeamsManagerBl" class="cz.metacentrum.perun.core.blImpl.SecurityTeamsManagerBlImpl" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<constructor-arg ref="securityTeamsManagerImpl" />
	</bean>
	<bean id="authzResolverBl" class="cz.metacentrum.perun.core.blImpl.AuthzResolverBlImpl" scope="singleton" depends-on="databaseManagerBl">
	</bean>
	<bean id="searcherBl" class="cz.metacentrum.perun.core.blImpl.SearcherBlImpl" scope="singleton" depends-on="databaseManagerBl">
		<property name="perunBl" ref="perun"/>
		<constructor-arg ref="searcherImpl" />
	</bean>

	<bean id="vosManagerImpl" class="cz.metacentrum.perun.core.impl.VosManagerImpl" scope="singleton" depends-on="databaseManagerBl">
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="usersManagerImpl" class="cz.metacentrum.perun.core.impl.UsersManagerImpl" scope="singleton" depends-on="databaseManagerBl">
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="groupsManagerImpl" class="cz.metacentrum.perun.core.impl.GroupsManagerImpl" scope="singleton" depends-on="databaseManagerBl">
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="facilitiesManagerImpl" class="cz.metacentrum.perun.core.impl.FacilitiesManagerImpl" scope="singleton" depends-on="databaseManagerBl">
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="databaseManagerImpl" class="cz.metacentrum.perun.core.impl.DatabaseManagerImpl" scope="singleton">
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="membersManagerImpl" class="cz.metacentrum.perun.core.impl.MembersManagerImpl" scope="singleton" depends-on="databaseManagerBl">
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="resourcesManagerImpl" class="cz.metacentrum.perun.core.impl.ResourcesManagerImpl" scope="singleton" depends-on="databaseManagerBl">
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="extSourcesManagerImpl" class="cz.metacentrum.perun.core.impl.ExtSourcesManagerImpl" scope="singleton" depends-on="databaseManagerBl">
		<constructor-arg ref="dataSource" />
		<property name="self" ref="extSourcesManagerImpl"/>
	</bean>
	<bean id="attributesManagerImpl" class="cz.metacentrum.perun.core.impl.AttributesManagerImpl" scope="singleton" depends-on="databaseManagerBl">
		<property name="perun" ref="perun"/>
		<property name="self" ref="attributesManagerImpl"/>
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="servicesManagerImpl" class="cz.metacentrum.perun.core.impl.ServicesManagerImpl" scope="singleton" depends-on="databaseManagerBl">
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="ownersManagerImpl" class="cz.metacentrum.perun.core.impl.OwnersManagerImpl" scope="singleton" depends-on="databaseManagerBl">
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="securityTeamsManagerImpl" class="cz.metacentrum.perun.core.impl.SecurityTeamsManagerImpl" scope="singleton" depends-on="databaseManagerBl">
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="authzResolverImpl" class="cz.metacentrum.perun.core.impl.AuthzResolverImpl" scope="singleton" init-method="initialize" depends-on="databaseManagerBl">
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="searcherImpl" class="cz.metacentrum.perun.core.impl.SearcherImpl" scope="singleton" depends-on="databaseManagerBl">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean id="auditer" class="cz.metacentrum.perun.core.impl.Auditer" scope="singleton" depends-on="coreConfig">
		<property name="perunPool" ref="dataSource"/>
	</bean>

	<bean id="cacheManager" class="cz.metacentrum.perun.core.impl.CacheManager" scope="singleton" destroy-method="stopCacheManager">
		<property name="perunPool" ref="dataSource"/>
		<constructor-arg ref="localCacheManager" />
	</bean>

	<bean id="synchronizer" class="cz.metacentrum.perun.core.impl.Synchronizer" scope="singleton" depends-on="databaseManagerBl">
		<constructor-arg ref="perun" />
	</bean>

	<bean class="cz.metacentrum.perun.core.impl.ExtSourceGoogle" factory-method="setPerunBlImpl">
		<constructor-arg ref="perun" />
	</bean>
	<bean class="cz.metacentrum.perun.core.impl.ExtSourceVOOT" factory-method="setPerunBlImpl">
		<constructor-arg ref="perun" />
	</bean>
	<bean class="cz.metacentrum.perun.core.impl.ExtSourceUnity" factory-method="setPerunBlImpl">
		<constructor-arg ref="perun" />
        </bean>
        <bean class="cz.metacentrum.perun.core.impl.ExtSourceCSV" factory-method="setPerunBlImpl">
		<constructor-arg ref="perun" />
	</bean>
	<bean class="cz.metacentrum.perun.core.impl.ExtSourceISMU" factory-method="setPerunBlImpl">
		<constructor-arg ref="perun" />
	</bean>
	<bean class="cz.metacentrum.perun.core.impl.ExtSourceLdap" factory-method="setPerunBlImpl">
		<constructor-arg ref="perun" />
	</bean>
	<bean class="cz.metacentrum.perun.core.impl.ExtSourcePerun" factory-method="setPerunBlImpl">
		<constructor-arg ref="perun" />
	</bean>
	<bean class="cz.metacentrum.perun.core.impl.ExtSourceSql" factory-method="setPerunBlImpl">
		<constructor-arg ref="perun" />
	</bean>
	<bean class="cz.metacentrum.perun.core.impl.ExtSourceREMS" factory-method="setPerunBlImpl">
		<constructor-arg ref="perun" />
	</bean>
	<bean class="cz.metacentrum.perun.core.impl.ExtSourceSqlComplex" factory-method="setPerunBlImpl">
		<constructor-arg ref="perun" />
	</bean>
	<bean class="cz.metacentrum.perun.core.impl.ExtSourceXML" factory-method="setPerunBlImpl">
		<constructor-arg ref="perun" />
	</bean>

	<bean id="localCacheManager" class="org.infinispan.manager.DefaultCacheManager" scope="singleton" >
		<constructor-arg value="infinispan-config.xml" />
	</bean>

	<!-- this bean is only for test -->
	<bean id="auditerConsumer" class="cz.metacentrum.perun.core.impl.AuditerConsumer" scope="prototype" depends-on="databaseManagerBl">
		<constructor-arg type="java.lang.String" value="consumerForTest" />
		<constructor-arg ref="dataSource" />
	</bean>

	<!-- merged from perun-core-transaction-manager.xml -->
	<bean id="perunTransactionManager" class="cz.metacentrum.perun.core.impl.PerunTransactionManager">
		<property name="dataSource" ref="dataSource"/>
		<property name="auditer" ref="auditer"/>
		<property name="cacheManager" ref="cacheManager"/>
		<property name="nestedTransactionAllowed" value="true"/>
	</bean>

	<bean id="perunTestTransactionManager" class="cz.metacentrum.perun.core.impl.PerunTestTransactionManager">
		<property name="dataSource" ref="dataSource"/>
		<property name="cacheManager" ref="cacheManager"/>
		<property name="nestedTransactionAllowed" value="true"/>
	</bean>

	<bean id="springTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
		<property name="nestedTransactionAllowed" value="true"/>
	</bean>

	<beans profile="trace">
		<import resource="classpath:perun-core-trace-log.xml"/>
	</beans>

	<!-- merged from perun-core-jdbc.xml -->

	<beans profile="production">
		<context:property-placeholder ignore-resource-not-found="true" ignore-unresolvable="true" location="@perun.jdbc@, file:${perun.conf.custom}/jdbc.properties"/>

		<!-- DataSource implementation -->
		<bean id="dataSource" class="cz.metacentrum.perun.core.impl.PerunBasicDataSource" depends-on="cacheManager" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}"/>
			<property name="url" value="${jdbc.url}"/>
			<property name="username" value="${jdbc.username}"/>
			<property name="password" value="${jdbc.password}"/>
			<property name="maxTotal" value="150" />
			<property name="maxIdle" value="30" />
			<property name="maxWaitMillis" value="30000" />
			<!-- Oracle  <property name="validationQuery" value="select 1 from dual" /> -->
			<!-- Postgres  <property name="validationQuery" value="select 1" /> -->
			<property name="removeAbandonedOnBorrow" value="true" />
			<property name="removeAbandonedOnMaintenance" value="true" />
			<property name="logAbandoned" value="true" />
			<property name="removeAbandonedTimeout" value="300" />
			<property name="testOnBorrow" value="true" />
			<property name="auditer" ref="auditer"/>
			<property name="cacheManager" ref="cacheManager"/>
		</bean>
	</beans>

	<beans profile="default">
		<!--DataSource implementation-->
		<jdbc:embedded-database id="dataSource" type="HSQL">
			<jdbc:script location="classpath:test-schema.sql"/>
			<jdbc:script location="classpath:test-data.sql"/>
		</jdbc:embedded-database>
	</beans>

</beans>
