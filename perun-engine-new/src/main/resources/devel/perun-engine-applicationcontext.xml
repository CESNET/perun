<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
"
		default-lazy-init="true"
>
	<!-- we will rather do only component scan for service beans, we will (re)define DAOs later -->
	<!-- 
    <import resource="classpath:perun-tasks-lib-applicationcontext.xml"/>
     -->
     
    <!-- Enable @Transactional support -->
     <tx:annotation-driven transaction-manager="transactionManagerPerunEngine"/>

    <!-- Enable @AspectJ support -->
    <aop:aspectj-autoproxy/>
    
    <!-- Importing Perun Core... -->
    <import resource="classpath:perun-beans.xml"/>

    <!-- Scans for @Repository, @Service and @Component -->
   	<context:component-scan base-package="cz.metacentrum.perun.taskslib.service.impl"/>
    <context:component-scan base-package="cz.metacentrum.perun.engine"/>
   		
    <task:scheduler id="scheduler" pool-size="4" />

    <task:scheduled-tasks scheduler="scheduler">
        <!-- 30 seconds: 0/30 * * * * ? -->
        <!--  3 minutes: 0 0/3 * * * ?  -->
        <task:scheduled ref="propagationMaintainerJob" method="doTheJob" cron="45 0/4 * * * ?"/>
        <task:scheduled ref="processPoolJob" method="doTheJob" cron="0 0/2 * * * ?"/>
        <task:scheduled ref="taskExecutorEngineJob" method="doTheJob" cron="0 0/4 * * * ?"/>
        <task:scheduled ref="checkInJob" method="doTheJob" cron="0 0/4 * * * ?"/>
    </task:scheduled-tasks>

    <bean id="callerRuns" class="java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy"/>

    <!--<bean id="taskExecutorEventProcess" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
          <property name="corePoolSize" value="1" />
          <property name="maxPoolSize" value="2" />
          <property name="queueCapacity" value="200" />
          <property name="rejectedExecutionHandler" ref="callerRuns" />
    </bean>

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
          <property name="corePoolSize" value="7" />
          <property name="maxPoolSize" value="7" />
          <property name="queueCapacity" value="20000" />
    </bean>-->


    <!-- TODO documentation of taskExecutors -->

    <bean id="taskExecutorMessageProcess" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
          <property name="corePoolSize" value="2" />
          <property name="maxPoolSize" value="2" />
          <property name="queueCapacity" value="100000" />

          <!-- TODO
          <property name="rejectedExecutionHandler" ref="callerRuns" />
          -->
    </bean>

    <!-- for force propagation  now it is unused -->
    <bean id="taskExecutorEventProcessor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
          <property name="corePoolSize" value="1" />
          <property name="maxPoolSize" value="1" />
          <property name="queueCapacity" value="1" />
    </bean>

    <bean id="taskExecutorSchedulingPoolSerializer" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
          <!-- TODO put better values here -->
          <property name="corePoolSize" value="5" />
          <property name="maxPoolSize" value="5" />
          <property name="queueCapacity" value="1000" />
    </bean>

    <bean id="taskExecutorGenWorkers" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
          <property name="corePoolSize" value="20" />
          <property name="maxPoolSize" value="20" />
          <property name="queueCapacity" value="2000" />
    </bean>

    <bean id="taskExecutorSendWorkers" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
          <property name="corePoolSize" value="10" />
          <property name="maxPoolSize" value="1000" />
          <property name="queueCapacity" value="200" />
    </bean>

    <!-- Properties Bean -->
    <bean id="propertiesBean" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
				<value>classpath:perun-engine.properties</value>
                <value>file:${perun.conf}perun-engine.properties</value>
                <value>file:${perun.conf.custom}perun-engine.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound">
            <value>true</value>
        </property>
        <property name="properties">
        	<props>
        		<prop key="engine.unique.id">0</prop>
        		<prop key="engine.ip.address">127.0.0.1</prop>
        		<prop key="engine.port">6061</prop>
		    	<prop key="perun.principal.name">perunTests</prop>
    	    	<prop key="perun.principal.extSourceName">cz.metacentrum.perun.core.impl.ExtSourceInternal</prop>
    	    	<prop key="perun.principal.extSourceType">cz.metacentrum.perun.core.impl.ExtSourceInternal</prop>
        	</props>
        </property>
    </bean>
</beans>
