#!/usr/bin/perl -w

use strict;
use warnings;
use Getopt::Long qw(:config no_ignore_case);
use Text::ASCIITable;
use Perun::Agent;
use Perun::Common qw(printMessage tableToPrint getSortingFunction);

sub help {
	return qq{
	Lists all required VO attributes. VO id or VO short name is required option.
	-----------------------------------------------------------------------
	Available options:
	--voId         | -v VO id
	--voShortName  | -V  VO short name
	--orderById    | -i order by attribute id
	--orderByName  | -n order by attribute friendly name
	--batch        | -b batch
	--help         | -h help

	};
}

my ($voId, $voShortName, $sortingFunction, $batch);
GetOptions ("help|h" => sub { print help(); exit 0;}, "batch|b" => \$batch,
"voId|v=i" => \$voId,
	"voShortName|V=s" => \$voShortName,
"orderById|i" => sub { $sortingFunction = getSortingFunction('getId') },
"orderByName|n" => sub {$sortingFunction = getSortingFunction("getFriendlyName", 1); } ) || die help();

unless(defined $sortingFunction) { $sortingFunction = getSortingFunction("getFriendlyName", 1); }

# Check options
unless (defined($voId) or defined($voShortName)) { die "ERROR: voId  or voShotName is required \n";}

my $agent = Perun::Agent->new();

unless(defined $voId) {
	my $vo = $agent->getVosAgent->getVoByShortName(shortName => $voShortName);
	$voId = $vo->getId;
}

my $attributesAgent = $agent->getAttributesAgent;
my @attributes = $attributesAgent->getRequiredAttributes(vo =>$voId);

unless(@attributes) { printMessage "No required attributes found", $batch;  exit 0; }

my $table = Text::ASCIITable->new({reportErrors => 0, utf8 => 0});
$table->setCols('attribute Id','attribute friendly name','namespace', 'value');

foreach my $attribute (sort $sortingFunction @attributes) {
	$table->addRow($attribute->getId, $attribute->getFriendlyName, $attribute->getNamespace, $attribute->getValueAsScalar);
}
print tableToPrint($table, $batch);
