#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long qw(:config no_ignore_case);
use Perun::Agent;
use Perun::Common qw(printMessage);
use Switch;

sub help {
	return qq{
	Sets the member's status. Member id and status are required.
	--------------------------------------
	Available options:
	--memberId        | -m member id
	--status          | -s VALID/INVALID/SUSPENDED/EXPIRED/DISABLED
	--batch           | -b batch
	--help            | -h prints this help

	};
}

my ($memberId, $status);
our $batch;
GetOptions ("help|h" => sub { print help(); exit 0;} ,"batch|b" => \$batch,
"memberId|m=i" => \$memberId, "status|s=s" => \$status) || die help();

# Check options
unless (defined($memberId)) { die "ERROR: memberId is required \n";}
unless (defined($status)) { die "ERROR: status is required \n";}

my $agent = Perun::Agent->new();
my $membersAgent = $agent->getMembersAgent;

# FIXME check if the status is valid
$membersAgent->setStatus(member => $memberId, status => $status);

printMessage("Status:".$status." set for the member Id:$memberId", $batch);
