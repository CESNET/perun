#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long qw(:config no_ignore_case);
use Perun::Agent;
use Perun::Common qw(printMessage);

sub help {
	return qq{
	Updates a securityTeam. SecurityTeam id is required field.
	--------------------------------------
	Available options:
        --securityTeamId   | -s Id of updated securityTeam
	--securityTeamName | -S new securityTeam name (no space allowed)
	--description      | -d new description
	--batch            | -b batch
	--help             | -h prints this help

	};
}

my ($securityTeamId, $securityTeamName, $desc, $batch);
GetOptions ("help|h" => sub { print help(); exit 0;} ,"batch|b" => \$batch,
"securityTeamId|s=i" => \$securityTeamId,
"securityTeamName|S=s" => \$securityTeamName,
"description|d=s" => \$desc || die help());

# Check options
unless (defined($securityTeamId)) { die "ERROR: securityTeamId is required \n";}
if (defined $securityTeamName and $securityTeamName =~ /\W/) { die "ERROR: securityTeamName has wrong format \n";}

my $agent = Perun::Agent->new();
my $securityTeamsAgent = $agent->getSecurityTeamsAgent;

my $securityTeam = $securityTeamsAgent->getSecurityTeamById(id => $securityTeamId);
$securityTeam->setName($securityTeamName) if (defined $securityTeamName);
$securityTeam->setDescription($desc) if (defined($desc));

$securityTeam = $securityTeamsAgent->updateSecurityTeam(securityTeam => $securityTeam);

printMessage("SecurityTeam Id:".$securityTeam->getId." successfully updated", $batch);
