#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long qw(:config no_ignore_case);
use Perun::Agent;
use Perun::Common qw(printMessage);

sub help {
	return qq{
	Adds a Facility manager. User id and Facility are required fields.
	------------------------------------
	Available options:
	--facilityId   | -f facility id
	--facilityName | -F facility name
	--userId       | -u user id
	--batch        | -b batch
	--help         | -h prints this help

	};
}

my ($facilityId, $userId, $facilityName, $batch);
GetOptions ("help|h" => sub { print help(); exit 0;} ,"batch|b" => \$batch,
"facilityId|f=i" => \$facilityId,
 "facilityName|F=s" => \$facilityName,
 "userId|u=i" => \$userId) || die help();

# Check options
unless (defined($facilityId) or (defined($facilityName))) { die "ERROR: facilityId or facilityName is required \n";}
unless (defined($userId)) {die "ERROR: userId is required\n";}

my $agent = Perun::Agent->new();
my $facilitiesAgent = $agent->getFacilitiesAgent;

unless($facilityId) {
	my $facility = $facilitiesAgent->getFacilityByName(name => $facilityName);
	$facilityId = $facility->getId;
}

$facilitiesAgent->addAdmin(facility => $facilityId, user => $userId);

printMessage("User Id:$userId successfully added as a Facility Id:$facilityId manager", $batch);
