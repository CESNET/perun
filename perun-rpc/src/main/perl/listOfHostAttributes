#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long qw(:config no_ignore_case);
use Text::ASCIITable;
use Perun::Agent;
use Perun::Common qw(printMessage tableToPrint getSortingFunction);

sub help {
	return qq{
	Prints list of Attributes defined on Host. Host is required field.
	---------------------------------------------------
	Available options:
	--hostId      | -H  host idetifier
	--orderById   | -i  order by numeric Id
	--orderByName | -n  order by Name
	--batch       | -b  batch
	--help        | -h  prints this help
	};
}

my ($hostId, $hostName, $batch, $sortingFunction);
GetOptions("help|h" => sub { print help; exit 0;} ,
	"hostId|H=i" => \$hostId,
"orderById|i" => sub { $sortingFunction = getSortingFunction("getId") } ,
"orderByName|n" =>  sub {$sortingFunction = getSortingFunction("getName", 1) },
"batch|b" => \$batch) || die help;

#options check
unless(defined $hostId) { die "ERROR: hostId is required\n";}
unless(defined $sortingFunction) { $sortingFunction = getSortingFunction("getName", 1); }

my $agent = Perun::Agent->new();

my $attributesAgent = $agent->getAttributesAgent;

my @attributes = $attributesAgent->getAttributes(host => $hostId);
unless(@attributes) { printMessage "No Attribute found", $batch; exit 0;}


#output
my $table = Text::ASCIITable->new({reportErrors => 0, utf8 => 0});
$table->setCols('ID','Name', 'Type', 'Value');

foreach my $attribute (sort $sortingFunction @attributes) {
	$table->addRow($attribute->getId, $attribute->getName, $attribute->getType, $attribute->getValueAsScalar);
}

print tableToPrint($table, $batch);
