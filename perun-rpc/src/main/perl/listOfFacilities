#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long qw(:config no_ignore_case);
use Text::ASCIITable;
use Perun::Agent;
use Perun::Common qw(printMessage tableToPrint getSortingFunction);

sub help {
	return qq{
	Prints list of Facilities
	-------------------------------
	Available options:
	--orderById   | -i  order by numeric Id
	--orderByName | -n  order by ShortName
	--batch       | -b  batch
	--help        | -h  prints this help
	};
}

my ($batch, $sortingFunction);
GetOptions("help|h" => sub { print help; exit 0;} ,
	"orderById|i" => sub { $sortingFunction = getSortingFunction("getId") } ,
	"orderByName|n" =>  sub {$sortingFunction = getSortingFunction("getName", 1) },
	"batch|b" => \$batch) || die help;

#options check
unless(defined $sortingFunction) { $sortingFunction = getSortingFunction("getName", 1); }

my $agent = Perun::Agent->new();
my $facilitiesAgent = $agent->getFacilitiesAgent;

my @facilities = $facilitiesAgent->getFacilities;
unless(@facilities) { printMessage "No Facilities found", $batch; exit 0;}


#output
my $table = Text::ASCIITable->new();
$table->setCols('ID','Name');

foreach my $facility (sort $sortingFunction @facilities) {
	$table->addRow($facility->getId, $facility->getName);
}

print tableToPrint($table, $batch);
