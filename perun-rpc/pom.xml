<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>perun</artifactId>
		<groupId>cz.metacentrum</groupId>
		<version>3.0.1-SNAPSHOT</version>
	</parent>

	<groupId>cz.metacentrum.perun</groupId>
	<artifactId>perun-rpc</artifactId>
	<version>3.0.1-SNAPSHOT-${perun.build.type}</version>
	<packaging>war</packaging>

	<name>perun-rpc</name>
	<description>RPC interface provided by Perun to communicate with GUI,CLI and any other external system (maven webapp 8081)</description>

	<properties>
		<maven.test.skip>true</maven.test.skip>
	</properties>

	<!-- common module build settings used by all profiles -->
	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warName>perun-rpc</warName>
					<webResources>
						<resource>
							<!-- Enable custom location of log4j.xml per webapp -->
							<filtering>true</filtering>
							<directory>src/main/webapp/WEB-INF/</directory>
							<targetPath>WEB-INF</targetPath> <!-- relative to webapp root -->
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- Allow to run Perun locally in Tomcat7 container by command "mvn tomcat7:run-war"
				 Server is started at ajp://localhost:8009/perun-rpc/
				 You need to setup Apache web server to provide (or fake) authentication in AJP headers
				 and to provide http->ajp rewrite so that calls from GUI (browser) are passed to Perun app. -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<serverXml>tomcat.xml</serverXml>
				</configuration>
			</plugin>

		</plugins>

	</build>

	<dependencies>

		<!-- PERUN -->
		<dependency>
			<groupId>cz.metacentrum.perun</groupId>
			<artifactId>perun-base</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>cz.metacentrum.perun</groupId>
			<artifactId>perun-core</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>cz.metacentrum.perun</groupId>
			<artifactId>perun-controller</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>cz.metacentrum.perun</groupId>
			<artifactId>perun-tasks-lib</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>cz.metacentrum.perun</groupId>
			<artifactId>perun-cabinet</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>cz.metacentrum.perun</groupId>
			<artifactId>perun-registrar-lib</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>cz.metacentrum.perun</groupId>
			<artifactId>perun-notification</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>cz.metacentrum.perun</groupId>
			<artifactId>perun-voot</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>cz.metacentrum.perun</groupId>
			<artifactId>perun-oidc</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>cz.metacentrum.perun</groupId>
			<artifactId>perun-dispatcher</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- SPRING -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>

		<!-- OTHERS -->

		<dependency>
			<groupId>net.tanesha.recaptcha4j</groupId>
			<artifactId>recaptcha4j</artifactId>
			<version>0.0.7</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<profiles>

		<profile>

			<id>devel</id>

			<activation>
				<property>
					<name>devel</name>
				</property>
			</activation>

			<properties>
				<perun.build.type>devel</perun.build.type>
				<spring.profiles.default>devel</spring.profiles.default>
			</properties>

			<build>
				<plugins>
					<plugin>
						<!-- Make "devel" tests to run against real DB -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<spring.profiles.default>devel</spring.profiles.default>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>

		</profile>

		<profile>

			<id>production</id>

			<activation>
				<property>
					<name>production</name>
				</property>
			</activation>

			<properties>
				<perun.build.type>production</perun.build.type>
				<maven.test.skip>true</maven.test.skip>
				<spring.profiles.default>production</spring.profiles.default>
			</properties>

		</profile>

	</profiles>

</project>