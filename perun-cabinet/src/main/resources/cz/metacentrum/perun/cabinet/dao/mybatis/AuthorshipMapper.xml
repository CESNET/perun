<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cz.metacentrum.perun.cabinet.dao.mybatis.AuthorshipMapper">
    <resultMap id="BaseResultMap" type="cz.metacentrum.perun.cabinet.model.Authorship">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        <id column="id" property="id" jdbcType="INTEGER" javaType="int"/>
        <result column="publicationId" property="publicationId"
                jdbcType="INTEGER" />
        <result column="userId" property="userId" jdbcType="INTEGER" />
        <result column="createdBy" property="createdBy" jdbcType="VARCHAR" />
        <result column="createdDate" property="createdDate" jdbcType="TIMESTAMP" />
        <result column="created_by_uid" property="createdByUid" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        id, publicationId, userId, createdBy, createdDate, created_by_uid
    </sql>
    <select id="findByFilter" resultMap="BaseResultMap"
            parameterType="cz.metacentrum.perun.cabinet.model.Authorship">
        select
        <include refid="Base_Column_List" />
        from CABINET_AUTHORSHIPS
        where
        <if test="id != 0">
            id = #{id,jdbcType=INTEGER,javaType=int} AND
        </if>
        <if test="publicationId != null">
            publicationId = #{publicationId,jdbcType=INTEGER} AND
        </if>
        <if test="userId != null">
            userId = #{userId,jdbcType=INTEGER} AND
        </if>
        <if test="createdBy != null">
            createdBy = #{createdBy,jdbcType=VARCHAR} AND
        </if>
        <if test="createdDate != null">
            createdDate = #{createdDate,jdbcType=TIMESTAMP} AND
        </if>
        <if test="createdByUid != null">
            created_by_uid = #{createdByUid,jdbcType=INTEGER} AND
        </if>
        1 = 1
    </select>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="cz.metacentrum.perun.cabinet.dao.mybatis.AuthorshipExample">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from CABINET_AUTHORSHIPS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Integer">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        select
        <include refid="Base_Column_List" />
        from CABINET_AUTHORSHIPS
        where id = #{id,jdbcType=INTEGER, javaType=int}
    </select>
    <select id="findByParams" resultMap="BaseResultMap" parameterType="java.util.Map">
        <if test="limit1 != null and limit2 != null">
            select * from (
            SELECT CABINET_AUTHORSHIPS.*, row_number() over (
            <if test="_databaseId != 'hsql'">
                <trim prefix="ORDER BY">
                    <if test="orderProperty != null">
                        ${orderProperty}
                        <if test="order != null">
                            ${order}
                        </if>
                    </if>
                </trim>
            </if>
            ) as rn FROM (
        </if>
        select
        CABINET_AUTHORSHIPS.id, CABINET_AUTHORSHIPS.publicationId, CABINET_AUTHORSHIPS.userId, CABINET_AUTHORSHIPS.createdBy, CABINET_AUTHORSHIPS.createdDate, CABINET_AUTHORSHIPS.created_by_uid,
        row_number() over (
        <if test="_databaseId != 'hsql'">
            <trim prefix="ORDER BY">
                <if test="orderProperty != null">
                    ${orderProperty}
                    <if test="order != null">
                        ${order}
                    </if>
                </if>
            </trim>
        </if>
        ) rownumber
        FROM CABINET_AUTHORSHIPS
        <!-- 		this code works with cabinet db -->
        <!-- 		JOIN `AUTHOR` ON `CABINET_AUTHORSHIPS`.userId = `AUTHOR`.userId -->
        <!-- for trim tag docs see mybatis 3.0 guide page 46+ -->
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="id != 0">
                CABINET_AUTHORSHIPS.id = #{id,jdbcType=INTEGER,javaType=int}
            </if>
            <if test="publicationId != null">
                AND CABINET_AUTHORSHIPS.publicationId = #{publicationId,jdbcType=INTEGER}
            </if>
            <if test="userId != null">
                AND CABINET_AUTHORSHIPS.userId = #{userId,jdbcType=INTEGER}
            </if>
            <if test="createdBy != null">
                AND CABINET_AUTHORSHIPS.createdBy = #{createdBy,jdbcType=VARCHAR}
            </if>
            <if test="createdDate != null">
                AND CABINET_AUTHORSHIPS.createdDate = #{createdDate,jdbcType=TIMESTAMP}
            </if>
            <if test="createdByUid != null">
                AND CABINET_AUTHORSHIPS.created_by_uid = #{createdByUid,jdbcType=INTEGER}
            </if>
        </trim>
        <trim prefix="ORDER BY">
            <if test="orderProperty != null">
                ${orderProperty}
                <if test="order != null">
                    ${order}
                </if>
            </if>
        </trim>
        <if test="limit1 != null and limit2 != null">
            ) CABINET_AUTHORSHIPS where rownumber <![CDATA[ <= ${limit2}) ]]>
            <if test="_databaseId == 'postgresql'"> as TEMP </if>
            <![CDATA[ where rn >= ${limit1} ]]>
        </if>
        <!-- 		<trim prefix="LIMIT"> -->
        <!-- 			<if test="limit1 != null and limit2 != null"> -->
        <!-- 			${limit1}, ${limit2} -->
        <!-- 			</if> -->
        <!-- 		</trim> -->
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        delete from CABINET_AUTHORSHIPS
        where id = #{id,jdbcType=INTEGER, javaType=int}
    </delete>
    <delete id="deleteByExample"
            parameterType="cz.metacentrum.perun.cabinet.dao.mybatis.AuthorshipExample">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        delete from CABINET_AUTHORSHIPS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" useGeneratedKeys="true"
            parameterType="cz.metacentrum.perun.cabinet.model.Authorship">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            <if test="_databaseId == 'oracle'">
                SELECT CABINET_AUTHORSHIPS_ID_SEQ.NEXTVAL id FROM DUAL
            </if>
            <if test="_databaseId == 'postgresql'">
                SELECT nextval('CABINET_AUTHORSHIPS_ID_SEQ')
            </if>
            <if test="_databaseId == 'hsql'">
                call next value for cabinet_authorships_id_seq
            </if>
        </selectKey>
        insert into CABINET_AUTHORSHIPS (id, publicationId, userId,
        createdBy, createdDate, created_by_uid)
        values (#{id,jdbcType=INTEGER,javaType=int}, #{publicationId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
        #{createdBy,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, #{createdByUid,jdbcType=INTEGER})

        <!-- mysql dialect -->
        <!-- 		<selectKey resultType="java.lang.Integer" keyProperty="id"> -->
        <!-- 			SELECT LAST_INSERT_ID() -->
        <!-- 		</selectKey> -->
    </insert>
    <insert id="insertSelective" parameterType="cz.metacentrum.perun.cabinet.model.Authorship">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            <if test="_databaseId == 'oracle'">
                SELECT CABINET_AUTHORSHIPS_ID_SEQ.NEXTVAL id FROM DUAL
            </if>
            <if test="_databaseId == 'postgresql'">
                SELECT nextval('CABINET_AUTHORSHIPS_ID_SEQ')
            </if>
            <if test="_databaseId == 'hsql'">
                call next value for cabinet_authorships_id_seq
            </if>
        </selectKey>
        insert into CABINET_AUTHORSHIPS
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != 0">
                id,
            </if>
            <if test="publicationId != null">
                publicationId,
            </if>
            <if test="userId != null">
                userId,
            </if>
            <if test="createdBy != null">
                createdBy,
            </if>
            <if test="createdDate != null">
                createdDate,
            </if>
            <if test="createdByUid != null">
                created_by_uid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != 0">
                #{id,jdbcType=INTEGER,javaType=int},
            </if>
            <if test="publicationId != null">
                #{publicationId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdByUid != null">
                #{createdByUid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample"
            parameterType="cz.metacentrum.perun.cabinet.dao.mybatis.AuthorshipExample"
            resultType="java.lang.Integer">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        select count(*) from CABINET_AUTHORSHIPS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        update CABINET_AUTHORSHIPS
        <set>
            <if test="record.id != 0">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.publicationId != null">
                publicationId = #{record.publicationId,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                userId = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.createdBy != null">
                createdBy = #{record.createdBy,jdbcType=VARCHAR},
            </if>
            <if test="record.createdDate != null">
                createdDate = #{record.createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createdByUid != null">
                created_by_uid = #{record.createdByUid,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        update CABINET_AUTHORSHIPS
        set id = #{record.id,jdbcType=INTEGER},
        publicationId = #{record.publicationId,jdbcType=INTEGER},
        userId = #{record.userId,jdbcType=INTEGER},
        createdBy = #{record.createdBy,jdbcType=VARCHAR},
        createdDate = #{record.createdDate,jdbcType=TIMESTAMP},
        created_by_uid = #{record.createdByUid,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cz.metacentrum.perun.cabinet.model.Authorship">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        update CABINET_AUTHORSHIPS
        <set>
            <if test="publicationId != null">
                publicationId = #{publicationId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                userId = #{userId,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                createdBy = #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                createdDate = #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createdByUid != null">
                created_by_uid = #{createdByUid,jdbcType=INTEGER}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cz.metacentrum.perun.cabinet.model.Authorship">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:37:17 CET 2011. -->
        update CABINET_AUTHORSHIPS
        set publicationId = #{publicationId,jdbcType=INTEGER},
        userId = #{userId,jdbcType=INTEGER},
        createdBy = #{createdBy,jdbcType=VARCHAR},
        createdDate = #{createdDate,jdbcType=TIMESTAMP},
        created_by_uid = #{createdByUid,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!-- GET ALL USER_IDs FROM AUTHORSHIPS aka ALL AUTHORS -->

    <select id="selectUniqueAuthorsIds" resultType="java.lang.Integer">
        select distinct userId from CABINET_AUTHORSHIPS
    </select>




    <!-- TO SELECT AUTHORS FROM DB DIRECTLY WITH ALL PROPERTIES -->

    <!-- RESULT MAP -->

    <resultMap id="AuthorWithAuthorshipsResultMap" type="cz.metacentrum.perun.cabinet.model.Author">

        <!-- BASE AUTHORS PROPERTIES -->

        <id column="author_id" property="id" jdbcType="INTEGER" />
        <result column="author_firstName" property="firstName" jdbcType="VARCHAR" />
        <result column="author_lastName" property="lastName" jdbcType="VARCHAR" />
        <result column="author_middleName" property="middleName" jdbcType="VARCHAR" />
        <result column="author_titleBefore" property="titleBefore" jdbcType="VARCHAR" />
        <result column="author_titleAfter" property="titleAfter" jdbcType="VARCHAR" />

        <!-- AUTHOR'S AUTHORSHIPS (=> number of reported publications) -->

        <collection property="authorships" javaType="arrayList" ofType="cz.metacentrum.perun.cabinet.model.Authorship">
            <id column="authorship_id" property="id" jdbcType="INTEGER" javaType="int" />
            <result column="authorship_userId" property="userId" jdbcType="INTEGER" />
            <result column="authorship_publicationId" property="publicationId" jdbcType="INTEGER" />
            <result column="authorship_createdBy" property="createdBy" jdbcType="VARCHAR" />
            <result column="authorship_createdDate" property="createdDate" jdbcType="TIMESTAMP" />
            <result column="authorship_created_by_uid" property="createdByUid" jdbcType="INTEGER" />
        </collection>

        <!-- AUTHOR'S LOGINS -->

        <collection property="logins" javaType="arrayList" ofType="cz.metacentrum.perun.core.api.UserExtSource">
            <id column="ues_id" property="id" jdbcType="INTEGER" />
            <result column="ues_login" property="login" jdbcType="VARCHAR" />
            <result column="ues_userId" property="userId" jdbcType="INTEGER" />
            <association property="extSource" javaType="cz.metacentrum.perun.core.api.ExtSource">
                <id column="es_id" property="id" jdbcType="INTEGER" />
                <result column="es_name" property="name" jdbcType="VARCHAR" />
                <result column="es_type" property="type" jdbcType="VARCHAR" />
            </association>
        </collection>

    </resultMap>

    <!-- SELECT AUTHOR BY USER ID -->

    <select id="findAuthorByUserId" resultMap="AuthorWithAuthorshipsResultMap" resultType="cz.metacentrum.perun.cabinet.model.Author">

        select distinct

        U.ID as author_id,
        U.FIRST_NAME as author_firstName,
        U.LAST_NAME as author_lastName,
        U.MIDDLE_NAME as author_middleName,
        U.TITLE_BEFORE as author_titleBefore,
        U.TITLE_AFTER as author_titleAfter,

        UES.ID as ues_id,
        UES.USER_ID as ues_userId,
        UES.LOGIN_EXT as ues_login,
        UES.EXT_SOURCES_ID as ues_esId,

        ES.ID as es_id,
        ES.NAME as es_name,
        ES.TYPE as es_type,

        A.id as authorship_id,
        A.userId as authorship_userId,
        A.publicationId as authorship_publicationId,
        A.createdBy as authorship_createdBy,
        A.createdDate as authorship_createdDate,
        A.created_by_uid as authorship_created_by_uid

        from USERS U

        left join CABINET_AUTHORSHIPS A on U.ID = A.userId
        left outer join USER_EXT_SOURCES UES on U.ID = UES.USER_ID
        left outer join EXT_SOURCES ES on UES.EXT_SOURCES_ID = ES.ID

        where U.ID=#{userId,jdbcType=INTEGER}
        and U.ID in (select distinct userId from CABINET_AUTHORSHIPS where userId = #{userId,jdbcType=INTEGER})
    </select>

    <!-- SELECT AUTHORS BY PUBLICATION ID-->

    <select id="findAuthorsByPublicationId" resultMap="AuthorWithAuthorshipsResultMap" resultType="cz.metacentrum.perun.cabinet.model.Author">

        select distinct

        U.ID as author_id,
        U.FIRST_NAME as author_firstName,
        U.LAST_NAME as author_lastName,
        U.MIDDLE_NAME as author_middleName,
        U.TITLE_BEFORE as author_titleBefore,
        U.TITLE_AFTER as author_titleAfter,

        UES.ID as ues_id,
        UES.USER_ID as ues_userId,
        UES.LOGIN_EXT as ues_login,
        UES.EXT_SOURCES_ID as ues_esId,

        ES.ID as es_id,
        ES.NAME as es_name,
        ES.TYPE as es_type,

        A.id as authorship_id,
        A.userId as authorship_userId,
        A.publicationId as authorship_publicationId,
        A.createdBy as authorship_createdBy,
        A.createdDate as authorship_createdDate,
        A.created_by_uid as authorship_created_by_uid

        from USERS U

        left join CABINET_AUTHORSHIPS A on U.ID = A.userId
        left outer join USER_EXT_SOURCES UES on U.ID = UES.USER_ID
        left outer join EXT_SOURCES ES on UES.EXT_SOURCES_ID = ES.ID

        where U.ID in (select distinct userId from CABINET_AUTHORSHIPS where publicationId = #{pubId,jdbcType=INTEGER})
    </select>

    <!-- SELECT ALL AUTHORS -->

    <select id="findAllAuthors" resultMap="AuthorWithAuthorshipsResultMap" resultType="cz.metacentrum.perun.cabinet.model.Author">

        select distinct

        U.ID as author_id,
        U.FIRST_NAME as author_firstName,
        U.LAST_NAME as author_lastName,
        U.MIDDLE_NAME as author_middleName,
        U.TITLE_BEFORE as author_titleBefore,
        U.TITLE_AFTER as author_titleAfter,

        A.id as authorship_id,
        A.userId as authorship_userId,
        A.publicationId as authorship_publicationId,
        A.createdBy as authorship_createdBy,
        A.createdDate as authorship_createdDate,
        A.created_by_uid as authorship_created_by_uid,

        UES.ID as ues_id,
        UES.USER_ID as ues_userId,
        UES.LOGIN_EXT as ues_login,
        UES.EXT_SOURCES_ID as ues_esId,

        ES.ID as es_id,
        ES.NAME as es_name,
        ES.TYPE as es_type

        from USERS U

        left join CABINET_AUTHORSHIPS A on U.ID = A.userId
        left outer join USER_EXT_SOURCES UES on U.ID = UES.USER_ID
        left outer join EXT_SOURCES ES on UES.EXT_SOURCES_ID = ES.ID

        where U.ID in (select distinct userId from CABINET_AUTHORSHIPS)
    </select>

</mapper>