<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cz.metacentrum.perun.cabinet.dao.mybatis.PublicationMapper">
    <resultMap id="BaseResultMap"
               type="cz.metacentrum.perun.cabinet.model.Publication">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="externalId" property="externalId" jdbcType="INTEGER" />
        <result column="publicationSystemId" property="publicationSystemId" jdbcType="INTEGER" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="year" property="year" jdbcType="INTEGER" />
        <result column="main" property="main" jdbcType="VARCHAR" />
        <result column="isbn" property="isbn" jdbcType="VARCHAR" />
        <result column="categoryId" property="categoryId" jdbcType="INTEGER" />
        <result column="createdBy" property="createdBy" jdbcType="VARCHAR" />
        <result column="createdDate" property="createdDate" jdbcType="TIMESTAMP" />
        <result column="rank" property="rank" jdbcType="DOUBLE" />
        <result column="doi" property="doi" jdbcType="VARCHAR" />
        <result column="locked" property="locked" jdbcType="VARCHAR" />
        <result column="created_by_uid" property="createdByUid" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Example_Where_AND_Clause">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="and">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Example_Where_AND_Clause_with_P_prefix">
        <!-- here is removed usual <where> tag because requesting RICH PUBLICATIONS requires
        filtering also by userId (author) in 1 SQL and there was no way to put it together by if/else
        "where" is now hardcoded into sql query with 1=1 hack :-) -->
        <foreach collection="pub.oredCriteria" item="criteria" separator="and">
            <!-- collection param has added prefix "pub." in value because of naming PublicationExample param
            like this in mapper interface (to be able to pass 2 params to SQL) -->
            <if test="criteria.valid">
                <trim prefix="(" suffix=")" prefixOverrides="and">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and P.${criterion.condition}
                            </when>
                            <!-- values with functions can't have P. prefix
                                see PublicationExcample - addRichTitleConstains(), addRichIsbnContains()
                             -->
                            <when test="criterion.specialValue">
                                and ${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.singleValue">
                                and P.${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and P.${criterion.condition} #{criterion.value} and
                                #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and P.${criterion.condition}
                                <foreach collection="criterion.value" item="listItem"
                                         open="(" close=")" separator=",">
                                    #{listItem}
                                </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
            </if>
        </foreach>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        id, externalId, publicationSystemId, title, year, main, isbn,
        categoryId, createdBy,
        createdDate, rank, doi, locked, created_by_uid
    </sql>
    <!-- manualne pridano -->
    <select id="selectByFilter" resultMap="BaseResultMap"
            parameterType="cz.metacentrum.perun.cabinet.model.Publication">
        select
        <include refid="Base_Column_List" />
        from CABINET_PUBLICATIONS
        where
        <if test="id != null">
            id = #{id} AND
        </if>
        <if test="externalId != null">
            externalId = #{externalId} AND
        </if>
        <if test="title != null">
            title = #{title} AND
        </if>
        <if test="year != null">
            year = #{year} AND
        </if>
        <if test="main != null">
            main = #{main} AND
        </if>
        <if test="isbn != null">
            isbn = #{isbn} AND
        </if>
        <if test="categoryId != null">
            categoryId = #{categoryId} AND
        </if>
        <if test="createdBy != null">
            createdBy = #{createdBy} AND
        </if>
        <if test="createdDate != null">
            createdDate = #{createdDate,jdbcType=TIMESTAMP} AND
        </if>
        <if test="rank != null">
            rank = #{rank,jdbcType=DOUBLE} AND
        </if>
        <if test="createdByUid != null">
            created_by_uid = #{createdByUid} AND
        </if>
        <if test="doi != null">
            doi = #{doi} AND
        </if>
        <if test="locked != null">

            locked =
            <if test="_databaseId == 'postgresql'">
                <if test="locked == true">'1'</if>
                <if test="locked == false">'0'</if>
            </if>
            <if test="_databaseId == 'oracle'">
                #{locked}
            </if>
            AND
        </if>
        1 = 1
    </select>
    <select id="selectByANDExample" resultMap="BaseResultMap"
            parameterType="cz.metacentrum.perun.cabinet.dao.mybatis.PublicationExample">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from CABINET_PUBLICATIONS
        <if test="_parameter != null">
            <include refid="Example_Where_AND_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>


    <!-- TO SELECT RICH PUBLICATIONS FROM DB DIRECTLY -->

    <resultMap id="richPubMap" type="cz.metacentrum.perun.cabinet.model.PublicationForGUI">

        <!-- BASE PUBLICATION PROPERTIES FROM CABINET_PUBLICATIONS TABLE -->

        <id column="pub_id" property="id" jdbcType="INTEGER" />
        <result column="pub_externalId" property="externalId" jdbcType="INTEGER" />
        <result column="pub_publicationSystemId" property="publicationSystemId" jdbcType="INTEGER" />
        <result column="pub_title" property="title" jdbcType="VARCHAR" />
        <result column="pub_year" property="year" jdbcType="INTEGER" />
        <result column="pub_main" property="main" jdbcType="VARCHAR" />
        <result column="pub_isbn" property="isbn" jdbcType="VARCHAR" />
        <result column="pub_categoryId" property="categoryId" jdbcType="INTEGER" />
        <result column="pub_createdBy" property="createdBy" jdbcType="VARCHAR" />
        <result column="pub_createdDate" property="createdDate" jdbcType="TIMESTAMP" />
        <result column="pub_rank" property="rank" jdbcType="DOUBLE" />
        <result column="pub_doi" property="doi" jdbcType="VARCHAR" />
        <result column="pub_locked" property="locked" jdbcType="VARCHAR" />
        <result column="pub_created_by_uid" property="createdByUid" jdbcType="INTEGER" />

        <!-- SET PUB SYSTEM AND CATEGORY FROM THEIR TABLES -->

        <result column="pubSystem_friendlyName" property="pubSystemName" jdbcType="VARCHAR" />
        <result column="category_name" property="categoryName" jdbcType="VARCHAR" />

        <!-- SET ALL THANKS FOR THIS PUB  -->

        <collection property="thanks" javaType="arrayList" ofType="cz.metacentrum.perun.cabinet.model.ThanksForGUI">
            <id column="thk_id" property="id" jdbcType="INTEGER" />
            <result column="thk_publicationId" property="publicationId" jdbcType="INTEGER" />
            <result column="thk_ownerId" property="ownerId" jdbcType="INTEGER" />
            <result column="thk_createdBy" property="createdBy" jdbcType="VARCHAR" />
            <result column="thk_createdDate" property="createdDate" jdbcType="TIMESTAMP" />
            <result column="owner_name" property="ownerName" jdbcType="VARCHAR" />
            <result column="thk_created_by_uid" property="createdByUid" jdbcType="INTEGER" />
        </collection>

        <!-- SET ALL AUTHORS FOR THIS PUB  -->

        <collection property="authors" javaType="arrayList" ofType="cz.metacentrum.perun.cabinet.model.Author">
            <id column="author_id" property="id" jdbcType="INTEGER" />
            <result column="author_firstName" property="firstName" jdbcType="VARCHAR" />
            <result column="author_lastName" property="lastName" jdbcType="VARCHAR" />
            <result column="author_middleName" property="middleName" jdbcType="VARCHAR" />
            <result column="author_titleBefore" property="titleBefore" jdbcType="VARCHAR" />
            <result column="author_titleAfter" property="titleAfter" jdbcType="VARCHAR" />
        </collection>

    </resultMap>

    <select id="selectRichByANDExample" resultMap="richPubMap" parameterType="cz.metacentrum.perun.cabinet.dao.mybatis.PublicationExample">

        select distinct

        P.id as pub_id,
        P.externalId as pub_externalId,
        P.publicationSystemId as pub_publicationSystemId,
        P.title as pub_title,
        P.year as pub_year,
        P.main as pub_main,
        P.isbn as pub_isbn,
        P.categoryId as pub_categoryId,
        P.createdBy as pub_createdBy,
        P.createdDate as pub_createdDate,
        P.rank as pub_rank,
        P.doi as pub_doi,
        P.locked as pub_locked,
        P.created_by_uid as created_by_uid,

        S.id as pubSystem_id,
        S.friendlyName as pubSystem_friendlyName,

        C.id as category_id,
        C.name as category_name,

        T.id as thk_id,
        T.publicationId as thk_publicationId,
        T.ownerId as thk_ownerId,
        T.createdBy as thk_createdBy,
        T.createdDate as thk_createdDate,
        T.created_by_uid as thk_created_by_uid,

        O.id as owner_id,
        O.name as owner_name,

        A.publicationId as author_publicationId,
        A.userId as author_id,

        U.ID as user_id,
        U.FIRST_NAME as author_firstName,
        U.LAST_NAME as author_lastName,
        U.MIDDLE_NAME as author_middleName,
        U.TITLE_BEFORE as author_titleBefore,
        U.TITLE_AFTER as author_titleAfter

        from CABINET_PUBLICATIONS P

        left outer join CABINET_PUBLICATION_SYSTEMS S on P.publicationSystemId = S.id
        left outer join CABINET_CATEGORIES C on P.categoryId = C.id
        left outer join CABINET_THANKS T on P.id = T.publicationId
        left outer join OWNERS O on T.ownerId = O.id
        left outer join CABINET_AUTHORSHIPS A on P.id = A.publicationId
        left outer join USERS U on A.userId = U.ID

        where

        <if test="pub != null">
            <!-- to filter by publication params -->
            <include refid="Example_Where_AND_Clause_with_P_prefix" /> and
        </if>
        <if test="user != null">
            <!-- to filter by author (userId) -->
            P.id in (select publicationId from CABINET_AUTHORSHIPS where userId = #{user,jdbcType=INTEGER}) and
        </if>
        1=1
        <if test="pub != null and pub.orderByClause != null">
            order by ${pub.orderByClause}
        </if>
    </select>

    <select id="selectRichByPrimaryKey" resultMap="richPubMap" parameterType="java.lang.Integer">

        select distinct

        P.id as pub_id,
        P.externalId as pub_externalId,
        P.publicationSystemId as pub_publicationSystemId,
        P.title as pub_title,
        P.year as pub_year,
        P.main as pub_main,
        P.isbn as pub_isbn,
        P.categoryId as pub_categoryId,
        P.createdBy as pub_createdBy,
        P.createdDate as pub_createdDate,
        P.rank as pub_rank,
        P.doi as pub_doi,
        P.locked as pub_locked,
        P.created_by_uid as pub_created_by_uid,

        S.id as pubSystem_id,
        S.friendlyName as pubSystem_friendlyName,

        C.id as category_id,
        C.name as category_name,

        T.id as thk_id,
        T.publicationId as thk_publicationId,
        T.ownerId as thk_ownerId,
        T.createdBy as thk_createdBy,
        T.createdDate as thk_createdDate,
        T.created_by_uid as thk_created_by_uid,

        O.id as owner_id,
        O.name as owner_name,

        A.publicationId as author_publicationId,
        A.userId as author_id,

        U.ID as user_id,
        U.FIRST_NAME as author_firstName,
        U.LAST_NAME as author_lastName,
        U.MIDDLE_NAME as author_middleName,
        U.TITLE_BEFORE as author_titleBefore,
        U.TITLE_AFTER as author_titleAfter

        from CABINET_PUBLICATIONS P

        left outer join CABINET_PUBLICATION_SYSTEMS S on P.publicationSystemId = S.id
        left outer join CABINET_CATEGORIES C on P.categoryId = C.id
        left outer join CABINET_THANKS T on P.id = T.publicationId
        left outer join OWNERS O on T.ownerId = O.id
        left outer join CABINET_AUTHORSHIPS A on P.id = A.publicationId
        left outer join USERS U on A.userId = U.ID

        where P.id = #{P.id,jdbcType=INTEGER}

    </select>

    <select id="selectRichByFilter" resultMap="richPubMap" parameterType="cz.metacentrum.perun.cabinet.model.Publication">

        select distinct

        P.id as pub_id,
        P.externalId as pub_externalId,
        P.publicationSystemId as pub_publicationSystemId,
        P.title as pub_title,
        P.year as pub_year,
        P.main as pub_main,
        P.isbn as pub_isbn,
        P.categoryId as pub_categoryId,
        P.createdBy as pub_createdBy,
        P.createdDate as pub_createdDate,
        P.rank as pub_rank,
        P.doi as pub_doi,
        P.locked as pub_locked,
        P.created_by_uid as pub_created_by_uid,

        S.id as pubSystem_id,
        S.friendlyName as pubSystem_friendlyName,

        C.id as category_id,
        C.name as category_name,

        T.id as thk_id,
        T.publicationId as thk_publicationId,
        T.ownerId as thk_ownerId,
        T.createdBy as thk_createdBy,
        T.createdDate as thk_createdDate,
        T.created_by_uid as thk_created_by_uid,

        O.id as owner_id,
        O.name as owner_name,

        A.publicationId as author_publicationId,
        A.userId as author_id,

        U.ID as user_id,
        U.FIRST_NAME as author_firstName,
        U.LAST_NAME as author_lastName,
        U.MIDDLE_NAME as author_middleName,
        U.TITLE_BEFORE as author_titleBefore,
        U.TITLE_AFTER as author_titleAfter

        from CABINET_PUBLICATIONS P

        left outer join CABINET_PUBLICATION_SYSTEMS S on P.publicationSystemId = S.id
        left outer join CABINET_CATEGORIES C on P.categoryId = C.id
        left outer join CABINET_THANKS T on P.id = T.publicationId
        left outer join OWNERS O on T.ownerId = O.id
        left outer join CABINET_AUTHORSHIPS A on P.id = A.publicationId
        left outer join USERS U on A.userId = U.ID

        where

        <if test="pub.id != null">
            P.id = #{pub.id} AND
        </if>
        <if test="pub.externalId != null">
            P.externalId = #{pub.externalId} AND
        </if>
        <if test="pub.title != null">
            P.title = #{pub.title} AND
        </if>
        <if test="pub.year != null">
            P.year = #{pub.year} AND
        </if>
        <if test="pub.main != null">
            P.main = #{pub.main} AND
        </if>
        <if test="pub.isbn != null">
            P.isbn = #{pub.isbn} AND
        </if>
        <if test="pub.categoryId != null">
            P.categoryId = #{pub.categoryId} AND
        </if>
        <if test="pub.createdBy != null">
            P.createdBy = #{pub.createdBy} AND
        </if>
        <if test="pub.createdByUid != null">
            P.created_by_uid = #{pub.createdByUid} AND
        </if>
        <if test="pub.createdDate != null">
            P.createdDate = #{pub.createdDate,jdbcType=TIMESTAMP} AND
        </if>
        <if test="pub.rank != null">
            P.rank = #{pub.rank,jdbcType=DOUBLE} AND
        </if>
        <if test="pub.doi != null">
            P.doi = #{pub.doi,jdbcType=VARCHAR} AND
        </if>
        <if test="pub.locked != null">
            P.locked =
            <if test="_databaseId == 'postgresql'">
                <if test="pub.locked == true">'1'</if>
                <if test="pub.locked == false">'0'</if>
            </if>
            <if test="_databaseId == 'oracle'">
                #{pub.locked,jdbcType=VARCHAR}
            </if>
            AND
        </if>
        <if test="user != null">
            <!-- to filter by author (userId) -->
            P.id in (select publicationId from CABINET_AUTHORSHIPS where userId = #{user,jdbcType=INTEGER}) AND
        </if>
        1 = 1
    </select>

    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="cz.metacentrum.perun.cabinet.dao.mybatis.PublicationExample">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from CABINET_PUBLICATIONS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Integer">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        select
        <include refid="Base_Column_List" />
        from CABINET_PUBLICATIONS
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByParams" parameterType="java.util.Map"
            resultMap="BaseResultMap">
        <if test="limit1 != null and limit2 != null">
            select * from (
            SELECT CABINET_PUBLICATIONS.*, rownum rn FROM (
        </if>
        select
        <include refid="Base_Column_List" />
        from CABINET_PUBLICATIONS
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="id != null">
                id = #{id}
            </if>
            <if test="externalId != null">
                externalId = #{externalId}
            </if>
            <if test="title != null">
                title = #{title}
            </if>
            <if test="year != null">
                year = #{year}
            </if>
            <if test="main != null">
                main = #{main}
            </if>
            <if test="isbn != null">
                isbn = #{isbn}
            </if>
            <if test="categoryId != null">
                categoryId = #{categoryId}
            </if>
            <if test="createdBy != null">
                createdBy = #{createdBy}
            </if>
            <if test="createdByUid != null">
                created_by_uid = #{createdByUid}
            </if>
            <if test="createdDate != null">
                createdDate = #{createdDate,jdbcType=TIMESTAMP}
            </if>
            <if test="rank != null">
                rank = #{rank}
            </if>
            <if test="doi != null">
                doi = #{doi}
            </if>
            <if test="locked != null">
                locked =
                <if test="_databaseId == 'postgresql'">
                    <if test="locked == true">'1'</if>
                    <if test="locked == false">'0'</if>
                </if>
                <if test="_databaseId == 'oracle'">
                    #{locked,jdbcType=VARCHAR}
                </if>
            </if>
        </trim>
        <trim prefix="ORDER BY">
            <if test="orderProperty != null">
                ${orderProperty}
                <if test="order != null">
                    ${order}
                </if>
            </if>
        </trim>
        <if test="limit1 != null and limit2 != null">
            ) CABINET_PUBLICATIONS where rownum <![CDATA[<]]>=
            ${limit2})
            where rn >=${limit1}
        </if>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        delete from CABINET_PUBLICATIONS
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample"
            parameterType="cz.metacentrum.perun.cabinet.dao.mybatis.PublicationExample">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        delete from CABINET_PUBLICATIONS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" useGeneratedKeys="true" parameterType="cz.metacentrum.perun.cabinet.model.Publication">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            <if test="_databaseId == 'oracle'">
                SELECT CABINET_PUBLICATIONS_ID_SEQ.NEXTVAL id FROM DUAL
            </if>
            <if test="_databaseId == 'postgresql'">
                SELECT nextval('CABINET_PUBLICATIONS_ID_SEQ')
            </if>
            <if test="_databaseId == 'hsql'">
                call next value for cabinet_publications_id_seq
            </if>
        </selectKey>
        insert into CABINET_PUBLICATIONS (id, externalId, publicationSystemId,
        title, year, main, isbn, categoryId, createdBy, created_by_uid,
        createdDate, rank, doi, locked)
        values (#{id,jdbcType=INTEGER}, #{externalId,jdbcType=INTEGER},
        #{publicationSystemId,jdbcType=INTEGER},
        #{title,jdbcType=VARCHAR}, #{year,jdbcType=INTEGER}, #{main,jdbcType=VARCHAR},
        #{isbn,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER},
        #{createdBy,jdbcType=VARCHAR}, #{createdByUid,jdbcType=INTEGER},
        #{createdDate,jdbcType=TIMESTAMP},#{rank,jdbcType=DOUBLE},#{doi,jdbcType=VARCHAR},
        <if test="_databaseId == 'postgresql'">
            <if test="locked == true">'1'</if>
            <if test="locked == false">'0'</if>
        </if>
        <if test="_databaseId == 'oracle'">
            #{locked, jdbcType=VARCHAR}
        </if>
        <if test="_databaseId == 'hsql'">
            <if test="locked == true">'1'</if>
            <if test="locked == false">'0'</if>
        </if>
        )
    </insert>
    <insert id="insertSelective" parameterType="cz.metacentrum.perun.cabinet.model.Publication">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            <if test="_databaseId == 'oracle'">
                SELECT CABINET_PUBLICATIONS_ID_SEQ.NEXTVAL id FROM DUAL
            </if>
            <if test="_databaseId == 'postgresql'">
                SELECT nextval('CABINET_PUBLICATIONS_ID_SEQ')
            </if>
            <if test="_databaseId == 'hsql'">
                call next value for cabinet_publications_id_seq
            </if>
        </selectKey>
        insert into CABINET_PUBLICATIONS
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="externalId != null">
                externalId,
            </if>
            <if test="publicationSystemId != null">
                publicationSystemId,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="year != null">
                year,
            </if>
            <if test="main != null">
                main,
            </if>
            <if test="isbn != null">
                isbn,
            </if>
            <if test="categoryId != null">
                categoryId,
            </if>
            <if test="createdBy != null">
                createdBy,
            </if>
            <if test="createdByUid != null">
                created_by_uid,
            </if>
            <if test="createdDate != null">
                createdDate,
            </if>
            <if test="rank != null">
                rank,
            </if>
            <if test="doi != null">
                doi,
            </if>
            <if test="locked != null">
                locked
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="externalId != null">
                #{externalId,jdbcType=INTEGER},
            </if>
            <if test="publicationSystemId != null">
                #{publicationSystemId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="year != null">
                #{year,jdbcType=INTEGER},
            </if>
            <if test="main != null">
                #{main,jdbcType=VARCHAR},
            </if>
            <if test="isbn != null">
                #{isbn,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdByUid != null">
                #{createdByUid,jdbcType=INTEGER},
            </if>
            <if test="createdDate != null">
                #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="rank != null">
                #{rank,jdbcType=DOUBLE},
            </if>
            <if test="doi != null">
                #{doi,jdbcType=VARCHAR},
            </if>
            <if test="locked != null">
                <if test="_databaseId == 'postgresql'">
                    <if test="locked == true">'1'</if>
                    <if test="locked == false">'0'</if>
                </if>
                <if test="_databaseId == 'oracle'">
                    #{locked,jdbcType=VARCHAR}
                </if>
                <if test="_databaseId == 'hsql'">
                    <if test="locked == true">'1'</if>
                    <if test="locked == false">'0'</if>
                </if>
            </if>
        </trim>
    </insert>
    <select id="countByExample"
            parameterType="cz.metacentrum.perun.cabinet.dao.mybatis.PublicationExample"
            resultType="java.lang.Integer">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        select count(*) from CABINET_PUBLICATIONS
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        update CABINET_PUBLICATIONS
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.externalId != null">
                externalId = #{record.externalId,jdbcType=INTEGER},
            </if>
            <if test="record.publicationSystemId != null">
                publicationSystemId = #{record.publicationSystemId,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.year != null">
                year = #{record.year,jdbcType=INTEGER},
            </if>
            <if test="record.main != null">
                main = #{record.main,jdbcType=VARCHAR},
            </if>
            <if test="record.isbn != null">
                isbn = #{record.isbn,jdbcType=VARCHAR},
            </if>
            <if test="record.categoryId != null">
                categoryId = #{record.categoryId,jdbcType=INTEGER},
            </if>
            <if test="record.createdBy != null">
                createdBy = #{record.createdBy,jdbcType=VARCHAR},
            </if>
            <if test="record.createdByUid != null">
                created_by_uid = #{record.createdByUid,jdbcType=INTEGER},
            </if>
            <if test="record.createdDate != null">
                createdDate = #{record.createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.rank != null">
                rank = #{record.rank,jdbcType=DOUBLE},
            </if>
            <if test="record.doi != null">
                doi = #{record.doi,jdbcType=VARCHAR},
            </if>
            <if test="record.locked != null">
                locked =
                <if test="_databaseId == 'postgresql'">
                    <if test="record.locked == true">'1'</if>
                    <if test="record.locked == false">'0'</if>
                </if>
                <if test="_databaseId == 'hsql'">
                    <if test="record.locked == true">'1'</if>
                    <if test="record.locked == false">'0'</if>
                </if>
                <if test="_databaseId == 'oracle'">
                    #{record.locked,jdbcType=VARCHAR}
                </if>
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        update CABINET_PUBLICATIONS
        set id = #{record.id,jdbcType=INTEGER},
        externalId = #{record.externalId,jdbcType=INTEGER},
        publicationSystemId = #{record.publicationSystemId,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        year = #{record.year,jdbcType=INTEGER},
        main = #{record.main,jdbcType=VARCHAR},
        isbn = #{record.isbn,jdbcType=VARCHAR},
        categoryId = #{record.categoryId,jdbcType=INTEGER},
        createdBy = #{record.createdBy,jdbcType=VARCHAR},
        created_by_uid = #{record.createdByUid,jdbcType=INTEGER},
        createdDate = #{record.createdDate,jdbcType=TIMESTAMP},
        rank = #{record.rank,jdbcType=DOUBLE},
        doi = #{record.doi,jdbcType=VARCHAR},
        locked =
        <if test="_databaseId == 'postgresql'">
            <if test="record.locked == true">'1'</if>
            <if test="record.locked == false">'0'</if>
        </if>
        <if test="_databaseId == 'oracle'">
            #{record.locked,jdbcType=VARCHAR}
        </if>
        <if test="_databaseId == 'hsql'">
            <if test="record.locked == true">'1'</if>
            <if test="record.locked == false">'0'</if>
        </if>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cz.metacentrum.perun.cabinet.model.Publication">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        update CABINET_PUBLICATIONS
        <set>
            <if test="externalId != null">
                externalId = #{externalId,jdbcType=INTEGER},
            </if>
            <if test="publicationSystemId != null">
                publicationSystemId = #{publicationSystemId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="year != null">
                year = #{year,jdbcType=INTEGER},
            </if>
            <if test="main != null">
                main = #{main,jdbcType=VARCHAR},
            </if>
            <if test="isbn != null">
                isbn = #{isbn,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                categoryId = #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                createdBy = #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdByUid != null">
                created_by_uid = #{createdByUid,jdbcType=INTEGER},
            </if>
            <if test="createdDate != null">
                createdDate = #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="rank != null">
                rank = #{rank,jdbcType=DOUBLE},
            </if>
            <if test="doi != null">
                doi = #{doi,jdbcType=VARCHAR},
            </if>
            <if test="locked != null">
                locked =
                <if test="_databaseId == 'postgresql'">
                    <if test="locked == true">'1'</if>
                    <if test="locked == false">'0'</if>
                </if>
                <if test="_databaseId == 'oracle'">
                    #{locked,jdbcType=VARCHAR}
                </if>
                <if test="_databaseId == 'hsql'">
                    <if test="locked == true">'1'</if>
                    <if test="locked == false">'0'</if>
                </if>
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cz.metacentrum.perun.cabinet.model.Publication">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Nov 04
            19:27:43 CET 2011. -->
        update CABINET_PUBLICATIONS
        set externalId = #{externalId,jdbcType=INTEGER},
        publicationSystemId = #{publicationSystemId,jdbcType=INTEGER},
        title = #{title,jdbcType=VARCHAR},
        year = #{year,jdbcType=INTEGER},
        main = #{main,jdbcType=VARCHAR},
        isbn = #{isbn,jdbcType=VARCHAR},
        categoryId = #{categoryId,jdbcType=INTEGER},
        createdBy = #{createdBy,jdbcType=VARCHAR},
        created_by_uid = #{createdByUid,jdbcType=INTEGER},
        createdDate = #{createdDate,jdbcType=TIMESTAMP},
        rank = #{rank,jdbcType=DOUBLE},
        doi = #{doi,jdbcType=VARCHAR},
        locked =
        <if test="_databaseId == 'postgresql'">
            <if test="locked == true">'1'</if>
            <if test="locked == false">'0'</if>
        </if>
        <if test="_databaseId == 'oracle'">
            #{locked,jdbcType=VARCHAR}
        </if>
        <if test="_databaseId == 'hsql'">
            <if test="locked == true">'1'</if>
            <if test="locked == false">'0'</if>
        </if>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <insert id="insertInternal" useGeneratedKeys="true"
            parameterType="cz.metacentrum.perun.cabinet.model.Publication">
        <!-- MANUALLY ADDED -->
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            <if test="_databaseId == 'oracle'">
                SELECT CABINET_PUBLICATIONS_ID_SEQ.NEXTVAL id FROM DUAL
            </if>
            <if test="_databaseId == 'postgresql'">
                SELECT nextval('CABINET_PUBLICATIONS_ID_SEQ')
            </if>
            <if test="_databaseId == 'hsql'">
                call next value for cabinet_publications_id_seq
            </if>
        </selectKey>
        insert into CABINET_PUBLICATIONS (id, externalId, publicationSystemId,
        title, year, main, isbn, categoryId, createdBy, created_by_uid,
        createdDate, rank, doi, locked)
        values
        (#{id,jdbcType=INTEGER}, #{id,jdbcType=INTEGER},
        #{publicationSystemId,jdbcType=INTEGER},
        #{title,jdbcType=VARCHAR},
        #{year,jdbcType=INTEGER}, #{main,jdbcType=VARCHAR},
        #{isbn,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER},
        #{createdBy,jdbcType=VARCHAR}, #{createdByUid,jdbcType=INTEGER},
        #{createdDate,jdbcType=TIMESTAMP},
        #{rank,jdbcType=DOUBLE},
        #{doi,jdbcType=VARCHAR},
        <if test="_databaseId == 'postgresql'">
            <if test="locked == true">'1'</if>
            <if test="locked == false">'0'</if>
        </if>
        <if test="_databaseId == 'oracle'">
            #{locked, jdbcType=VARCHAR}
        </if>
        <if test="_databaseId == 'hsql'">
            <if test="locked == true">'1'</if>
            <if test="locked == false">'0'</if>
        </if>
        )
    </insert>

    <update id="lockPublications" parameterType="arrayList">
        update CABINET_PUBLICATIONS
        <set>
            <if test="lockState != null">
                locked =
                <if test="_databaseId == 'postgresql'">
                    <if test="lockState == true">'1'</if>
                    <if test="lockState == false">'0'</if>
                </if>
                <if test="_databaseId == 'oracle'">
                    #{lockState, jdbcType=VARCHAR}
                </if>
                <if test="_databaseId == 'hsql'">
                    <if test="lockState == true">'1'</if>
                    <if test="lockState == false">'0'</if>
                </if>
            </if>
        </set>
        where id in
        <foreach collection="ids" item="listItem" open="(" close=")" separator=",">
            #{listItem}
        </foreach>
    </update>

</mapper>