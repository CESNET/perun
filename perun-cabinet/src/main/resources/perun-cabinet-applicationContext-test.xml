<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
">

	<!-- import PERUN datasources -->
	<import resource="classpath:perun-datasources-test.xml" />
	<import resource="classpath:perun-beans-test.xml" />
	<import resource="classpath:perun-transaction-manager.xml" />

	<!-- Enable @Transactional support -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/>  -->

	<!-- Enable @AspectJ support -->
	<!-- <aop:aspectj-autoproxy/> -->

	<!-- add transaction support for delete publication  -->
	<aop:config>
		<aop:advisor advice-ref="txDeletePublication" pointcut="execution(* cz.metacentrum.perun.cabinet.service.IPublicationService.deletePublicationById(..))"/>
		<aop:advisor advice-ref="txCreateAuthorship" pointcut="execution(* cz.metacentrum.perun.cabinet.service.IAuthorshipService.createAuthorship(..))"/>
		<aop:advisor advice-ref="txDeleteAuthorship" pointcut="execution(* cz.metacentrum.perun.cabinet.service.IAuthorshipService.deleteAuthorshipById(..))"/>
	</aop:config>
	<tx:advice id="txDeletePublication" transaction-manager="perunTransactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	<tx:advice id="txCreateAuthorship" transaction-manager="perunTransactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<tx:advice id="txDeleteAuthorship" transaction-manager="perunTransactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
		<property name="databaseIdProvider" ref="databaseIdProvider" />
		<!--
			classpath: -->
		<!-- <property name="mapperLocations" value="mybatis.xml"/> -->

	</bean>

	<!-- Properties Bean, so far used in tests -->
	<bean id="cabinetProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>file:${perun.conf}perun-cabinet.properties</value>
				<value>file:${perun.conf.custom}perun-cabinet.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound">
			<value>true</value>
		</property>
	</bean>

	<!-- import PERUN-CORE beans -->
	<!-- <import resource="classpath:perun-beans.xml"/> -->

	<!-- MyBatis mapper beans -->
	<bean id="publicationSystemMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
		          value="cz.metacentrum.perun.cabinet.dao.mybatis.PublicationSystemMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<bean id="categoryMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
		          value="cz.metacentrum.perun.cabinet.dao.mybatis.CategoryMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<bean id="publicationMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
		          value="cz.metacentrum.perun.cabinet.dao.mybatis.PublicationMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<bean id="authorshipMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
		          value="cz.metacentrum.perun.cabinet.dao.mybatis.AuthorshipMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<bean id="thanksMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
		          value="cz.metacentrum.perun.cabinet.dao.mybatis.ThanksMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- dao classes beans -->

	<bean id="publicationDao"
	      class="cz.metacentrum.perun.cabinet.dao.impl.PublicationDaoImpl">
		<property name="publicationMapper" ref="publicationMapper" />
	</bean>

	<bean id="publicationSystemDao"
	      class="cz.metacentrum.perun.cabinet.dao.impl.PublicationSystemDaoImpl">
		<property name="publicationSystemMapper" ref="publicationSystemMapper" />
	</bean>

	<bean id="authorshipDao" class="cz.metacentrum.perun.cabinet.dao.impl.AuthorshipDaoImpl">
		<property name="authorshipMapper" ref="authorshipMapper" />
	</bean>

	<bean id="thanksDao" class="cz.metacentrum.perun.cabinet.dao.impl.ThanksDaoImpl">
		<property name="thanksMapper" ref="thanksMapper" />
	</bean>

	<bean id="categoryDao" class="cz.metacentrum.perun.cabinet.dao.impl.CategoryDaoImpl">
		<property name="categoryMapper" ref="categoryMapper" />
	</bean>

	<!-- service classes beans -->

	<bean id="perunService"
	      class="cz.metacentrum.perun.cabinet.service.impl.PerunServiceImpl" init-method="initialize">
		<property name="thanksDao" ref="thanksDao" />
	</bean>

	<bean id="publicationSystemService"
	      class="cz.metacentrum.perun.cabinet.service.impl.PublicationSystemServiceImpl"
	      init-method="initialize">
		<property name="publicationSystemDao" ref="publicationSystemDao" />
	</bean>

	<bean id="publicationService"
	      class="cz.metacentrum.perun.cabinet.service.impl.PublicationServiceImpl">
		<property name="publicationDao" ref="publicationDao" />
		<property name="authorshipService" ref="authorshipService" />
		<property name="authorService" ref="authorService" />
		<property name="publicationSystemService" ref="publicationSystemService" />
		<property name="perunService" ref="perunService" />
		<property name="thanksService" ref="thanksService" />
	</bean>

	<bean id="categoryService"
	      class="cz.metacentrum.perun.cabinet.service.impl.CategoryServiceImpl">
		<property name="categoryDao" ref="categoryDao" />
		<property name="perunService" ref="perunService" />
		<property name="publicationService" ref="publicationService" />
		<property name="authorshipService" ref="authorshipService" />
		<property name="authorService" ref="authorService" />
	</bean>

	<bean id="authorService"
	      class="cz.metacentrum.perun.cabinet.service.impl.AuthorServiceImpl">
		<property name="authorshipDao" ref="authorshipDao" />
	</bean>

	<bean id="authorshipService"
	      class="cz.metacentrum.perun.cabinet.service.impl.AuthorshipServiceImpl">
		<property name="authorshipDao" ref="authorshipDao" />
		<property name="publicationService" ref="publicationService" />
		<property name="categoryService" ref="categoryService" />
		<property name="authorService" ref="authorService" />
		<property name="perunService" ref="perunService" />
	</bean>

	<bean id="thanksService"
	      class="cz.metacentrum.perun.cabinet.service.impl.ThanksServiceImpl">
		<property name="thanksDao" ref="thanksDao" />
		<property name="authorService" ref="authorService" />
		<property name="perunService" ref="perunService" />
	</bean>

	<bean id="httpService"
	      class="cz.metacentrum.perun.cabinet.service.impl.HttpServiceImpl" />

	<bean id="cabinetService"
	      class="cz.metacentrum.perun.cabinet.service.impl.CabinetServiceImpl">
		<property name="perunService" ref="perunService" />
		<property name="httpService" ref="httpService" />
		<property name="publicationSystemService" ref="publicationSystemService" />
	</bean>

	<!-- api classes beans -->

	<bean id="cabinetApi" class="cz.metacentrum.perun.cabinet.api.impl.CabinetApiImpl">
		<property name="cabinetService" ref="cabinetService" />
		<property name="publicationService" ref="publicationService" />
		<property name="authorService" ref="authorService" />
		<property name="authorshipService" ref="authorshipService" />
		<property name="thanksService" ref="thanksService" />
		<property name="categoryService" ref="categoryService" />
		<property name="publicationSystemService" ref="publicationSystemService" />
		<property name="perunService" ref="perunService" />
	</bean>

	<!-- Define compatibility layer for DB specific queries -->
	<bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="PostgreSQL">postgresql</prop>
				<prop key="Oracle">oracle</prop>
				<prop key="HSQL">hsql</prop>
			</props>
		</property>
	</bean>

	<bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
		<property name="properties" ref="vendorProperties"/>
	</bean>

</beans>